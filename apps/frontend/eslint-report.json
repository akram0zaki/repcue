[{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright-report\\trace\\assets\\codeMirrorModule-B9MwJ51G.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright-report\\trace\\assets\\defaultSettingsView-Do_wwdKw.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright-report\\trace\\index.BZPYnuWQ.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright-report\\trace\\sw.bundle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright-report\\trace\\uiMode.9zHYMU6d.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\scripts\\copy-splash.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\scripts\\generate-favicons.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\scripts\\generate-splash.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\scripts\\i18n-scan.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\scripts\\verify-media.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\App.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'appSettings'. Either include it or remove the dependency array.","line":771,"column":6,"nodeType":"ArrayExpression","endLine":771,"endColumn":122,"suggestions":[{"desc":"Update the dependencies array to be: [timerState, appSettings, exercises, resetTimer, selectedExercise?.name]","fix":{"range":[30545,30661],"text":"[timerState, appSettings, exercises, resetTimer, selectedExercise?.name]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { consentService } from './services/consentService';\nimport { storageService, StorageService } from './services/storageService';\nimport { audioService } from './services/audioService';\nimport { syncService } from './services/syncService';\nimport { INITIAL_EXERCISES } from './data/exercises';\nimport { useWakeLock } from './hooks/useWakeLock';\nimport { useAuth } from './hooks/useAuth';\nimport ConsentBanner from './components/ConsentBanner';\nimport MigrationSuccessBanner from './components/MigrationSuccessBanner';\nimport AppShell from './components/AppShell';\nimport { registerServiceWorker } from './utils/serviceWorker';\nimport type { Exercise, AppSettings, TimerState, ActivityLog, WorkoutExercise, WorkoutSession } from './types';\nimport { Routes as AppRoutes } from './types';\nimport { DEFAULT_APP_SETTINGS, BASE_REP_TIME, REST_TIME_BETWEEN_SETS, type TimerPreset } from './constants';\nimport { computeWorkoutDurations } from './utils/workoutDuration';\nimport i18n from './i18n';\n\n// Enhanced lazy loading with error boundaries and preloading\nimport { Suspense } from 'react';\nimport { \n  HomePage, \n  ExercisePage, \n  TimerPage, \n  ActivityLogPage, \n  SettingsPage,\n  WorkoutsPage,\n  CreateWorkoutPage,\n  EditWorkoutPage,\n  AuthCallbackPage,\n  ChunkErrorBoundary,\n} from './router/LazyRoutes';\nimport { preloadCriticalRoutes, createRouteLoader } from './router/routeUtils';\n\n// Wrapper component to handle navigation state for TimerPage\nconst TimerPageWrapper: React.FC<{\n  exercises: Exercise[];\n  appSettings: AppSettings;\n  timerState: TimerState;\n  selectedExercise: Exercise | null;\n  selectedDuration: TimerPreset;\n  showExerciseSelector: boolean;\n  wakeLockSupported: boolean;\n  wakeLockActive: boolean;\n  onSetSelectedExercise: (exercise: Exercise | null) => void;\n  onSetSelectedDuration: (duration: TimerPreset) => void;\n  onSetShowExerciseSelector: (show: boolean) => void;\n  onStartTimer: () => Promise<void>;\n  onStopTimer: (isCompletion?: boolean) => Promise<void>;\n  onResetTimer: () => Promise<void>;\n  onStartWorkoutMode: (workoutData: { workoutId: string; workoutName: string; exercises: WorkoutExercise[] }) => Promise<void>;\n}> = (props) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { onSetSelectedExercise, onSetSelectedDuration, onStartTimer, onStartWorkoutMode, timerState } = props;\n  const processedStateRef = React.useRef<string | null>(null);\n\n  // Handle navigation state from ExercisePage or HomePage\n  useEffect(() => {\n    const state = location.state as { \n      selectedExercise?: Exercise; \n      selectedDuration?: number;\n      workoutMode?: { workoutId: string; workoutName: string; exercises: WorkoutExercise[] };\n    } | null;\n    \n    // Handle workout mode navigation\n    if (state?.workoutMode && !timerState.isRunning && !timerState.workoutMode) {\n      onStartWorkoutMode(state.workoutMode);\n      return;\n    }\n    \n    // Handle single exercise navigation\n    const stateKey = state?.selectedExercise?.id || null;\n    if (state?.selectedExercise && !timerState.isRunning && processedStateRef.current !== stateKey) {\n      processedStateRef.current = stateKey;\n      \n      // Set the exercise and duration from navigation state\n      onSetSelectedExercise(state.selectedExercise);\n      if (state.selectedDuration) {\n        onSetSelectedDuration(state.selectedDuration as TimerPreset);\n      }\n      \n      // Auto-start timer after a brief delay to ensure state is updated\n      const timer = setTimeout(() => {\n        onStartTimer();\n      }, 200);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [location.state, onSetSelectedExercise, onSetSelectedDuration, onStartTimer, onStartWorkoutMode, timerState.isRunning, timerState.workoutMode]);\n\n  const handleResetTimer = useCallback(async () => {\n    // If we're in workout mode, navigate back to workouts page\n    if (timerState.workoutMode) {\n      navigate(AppRoutes.WORKOUTS, { replace: true });\n    }\n    \n    // Call the original reset timer function\n    await props.onResetTimer();\n  }, [timerState.workoutMode, navigate, props]);\n\n  return <TimerPage {...props} onResetTimer={handleResetTimer} />;\n};\n\n// Setup sync triggers for various app lifecycle events\nconst setupSyncTriggers = () => {\n  // Trigger sync on page visibility change (app foreground)\n  const handleVisibilityChange = () => {\n    if (!document.hidden) {\n      console.log('📱 App came to foreground - triggering sync');\n      syncService.sync().catch(error => {\n        console.warn('Foreground sync failed:', error);\n      });\n    }\n  };\n\n  // Setup periodic sync (every 5 minutes when active)\n  let syncInterval: NodeJS.Timeout | null = null;\n  const setupPeriodicSync = () => {\n    if (syncInterval) {\n      clearInterval(syncInterval);\n    }\n    \n    syncInterval = setInterval(() => {\n      if (!document.hidden) {\n        console.log('⏰ Periodic sync triggered');\n        syncService.sync().catch(error => {\n          console.warn('Periodic sync failed:', error);\n        });\n      }\n    }, 5 * 60 * 1000); // 5 minutes\n  };\n\n  // Setup event listeners\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n  setupPeriodicSync();\n\n  // Cleanup function\n  return () => {\n    document.removeEventListener('visibilitychange', handleVisibilityChange);\n    if (syncInterval) {\n      clearInterval(syncInterval);\n    }\n  };\n};\n\nfunction App() {\n  const autoConsent = typeof window !== 'undefined' && (window as Window & { __AUTO_CONSENT__?: boolean }).__AUTO_CONSENT__ === true;\n  const [hasConsent, setHasConsent] = useState<boolean>(autoConsent ? true : consentService.hasConsent());\n  const [isLoading, setIsLoading] = useState(true);\n  const [exercises, setExercises] = useState<Exercise[]>([]);\n  const [appSettings, setAppSettings] = useState<AppSettings>(DEFAULT_APP_SETTINGS);\n  \n  // Authentication state\n  // Auth state consumed indirectly via sync:applied listener\n  useAuth();\n\n  // Persistent Timer State\n  const [timerState, setTimerState] = useState<TimerState>({\n    isRunning: false,\n    currentTime: 0,\n    intervalDuration: 30,\n    currentExercise: undefined,\n    isCountdown: false,\n    countdownTime: 0,\n    isResting: false,\n    restTimeRemaining: undefined\n  });\n\n  // Timer UI State\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(null);\n  const [selectedDuration, setSelectedDuration] = useState<TimerPreset>(30);\n  const [showExerciseSelector, setShowExerciseSelector] = useState(false);\n\n  // Effect to ensure correct duration for rep-based exercises\n  useEffect(() => {\n    if (selectedExercise?.exercise_type === 'repetition_based' && appSettings.rep_speed_factor) {\n    const baseRep = selectedExercise.rep_duration_seconds || BASE_REP_TIME;\n    const repDuration = Math.round(baseRep * appSettings.rep_speed_factor);\n      if (selectedDuration !== repDuration) {\n        setSelectedDuration(repDuration as TimerPreset);\n      }\n    }\n  }, [selectedExercise, appSettings.rep_speed_factor, selectedDuration]);\n\n  // Timer refs for interval management\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const lastBeepIntervalRef = useRef<number>(0);\n\n  // Wake lock for keeping screen active\n  const { isSupported: wakeLockSupported, isActive: wakeLockActive, requestWakeLock, releaseWakeLock } = useWakeLock();\n\n  // Helper function to create timer intervals with appropriate timing for exercise type\n  const createTimerInterval = useCallback((startTime: number, isForRepBasedExercise: boolean = false) => {\n    // Use 100ms intervals for rep-based exercises for smooth progress, 1000ms for time-based\n    const intervalDuration = isForRepBasedExercise ? 100 : 1000;\n    \n    return setInterval(() => {\n      const elapsed = isForRepBasedExercise \n        ? (Date.now() - startTime) / 1000  // Use decimal seconds for smooth progress\n        : Math.floor((Date.now() - startTime) / 1000); // Use whole seconds for time-based\n      \n      setTimerState(prev => {\n        // Don't update if timer is not running or target time is not set\n        if (!prev.isRunning || !prev.targetTime) {\n          return prev;\n        }\n\n        const remaining = prev.targetTime - elapsed;\n\n        // Check if timer completed\n        if (remaining <= 0) {\n          // Timer finished - will be handled in useEffect\n          return { ...prev, currentTime: prev.targetTime };\n        }\n\n        // Update currentTime - for rep-based exercises, use smooth decimal values\n        const newCurrentTime = isForRepBasedExercise ? elapsed : Math.floor(elapsed);\n        if (newCurrentTime !== prev.currentTime) {\n          return { ...prev, currentTime: newCurrentTime };\n        }\n\n        return prev;\n      });\n\n      // Interval beeping: beep every intervalDuration seconds (only for whole seconds)\n      const wholeSecondsElapsed = Math.floor(elapsed);\n      if (wholeSecondsElapsed > 0 && wholeSecondsElapsed % appSettings.interval_duration === 0) {\n        if (wholeSecondsElapsed !== lastBeepIntervalRef.current) {\n          if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n            audioService.playIntervalFeedback(appSettings.sound_enabled, appSettings.vibration_enabled, appSettings.beep_volume);\n          }\n          lastBeepIntervalRef.current = wholeSecondsElapsed;\n        }\n      }\n    }, intervalDuration);\n  }, [appSettings.interval_duration, appSettings.sound_enabled, appSettings.vibration_enabled, appSettings.beep_volume]);\n\n  // Separate function for the actual timer logic\n  const startActualTimer = useCallback(() => {\n    // Clear any existing interval first\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    // Play start sound and vibration\n    if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n      audioService.playStartFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n    }\n\n    // Announce timer start\n    if (appSettings.sound_enabled) {\n      const actualTargetTime = timerState.targetTime || selectedDuration;\n      audioService.announceText(`Timer started! ${actualTargetTime} seconds`);\n    }\n\n    const startTime = Date.now();\n    lastBeepIntervalRef.current = 0; // Reset interval counter\n\n    // Check if this is a standalone rep-based exercise (not in workout mode)\n    const isStandaloneRepBased = selectedExercise?.exercise_type === 'repetition_based' && !timerState.workoutMode;\n    \n    // For standalone rep-based exercises, set up rep/set tracking\n    let repSetState = {};\n    if (isStandaloneRepBased) {\n      const defaultSets = selectedExercise.default_sets || 3;\n      const defaultReps = selectedExercise.default_reps || 8;\n      repSetState = {\n        currentSet: 0,\n        totalSets: defaultSets,\n        currentRep: 0,\n        totalReps: defaultReps\n      };\n    }\n\n    // Update timer state to actual timer mode\n    setTimerState(prev => {\n      // If targetTime is already set (e.g., from workout mode), use it; otherwise use selectedDuration\n      const actualTargetTime = prev.targetTime || selectedDuration;\n      console.log('startActualTimer: Setting targetTime to:', actualTargetTime, 'from prev.targetTime:', prev.targetTime, 'selectedDuration:', selectedDuration);\n      \n      return {\n        ...prev,\n        isRunning: true,\n        isCountdown: false,\n        countdownTime: 0,\n        currentTime: 0,\n        targetTime: actualTargetTime,\n        startTime: new Date(startTime),\n        currentExercise: selectedExercise || undefined,\n        // Only clear workout mode for standalone exercises (preserve it for workout mode)\n        workoutMode: prev.workoutMode || undefined,\n        // Clear workout-specific rest state\n        isResting: false,\n        restTimeRemaining: undefined,\n        ...repSetState\n      };\n    });\n\n    // Start the main timer interval\n    console.log('startActualTimer: Starting interval with targetTime:', timerState.targetTime || selectedDuration);\n    \n    // Use the helper function to create appropriate timer interval\n    // In workout mode, check the current exercise in the workout; otherwise use selectedExercise\n    let isRepBasedExercise = false;\n    if (timerState.workoutMode) {\n      const currentWorkoutExercise = timerState.workoutMode.exercises[timerState.workoutMode.currentExerciseIndex];\n      const currentExercise = exercises.find(ex => ex.id === currentWorkoutExercise.exercise_id);\n      isRepBasedExercise = currentExercise?.exercise_type === 'repetition_based';\n    } else {\n      isRepBasedExercise = selectedExercise?.exercise_type === 'repetition_based';\n    }\n    intervalRef.current = createTimerInterval(startTime, isRepBasedExercise);\n  }, [selectedExercise, selectedDuration, appSettings.sound_enabled, appSettings.vibration_enabled, timerState.workoutMode, createTimerInterval, timerState.targetTime, exercises]);\n\n  // Timer Functions\n  const startTimer = useCallback(async () => {\n    if (!selectedExercise) {\n      alert('Please select an exercise first');\n      return;\n    }\n\n    // Request wake lock to keep screen active at the start\n    if (wakeLockSupported) {\n      await requestWakeLock();\n    }\n\n    // If pre-timer countdown is enabled, start countdown phase\n    if (appSettings.pre_timer_countdown > 0) {\n      // Start countdown phase\n      setTimerState(prev => ({\n        ...prev,\n        isRunning: true,\n        isCountdown: true,\n        countdownTime: appSettings.pre_timer_countdown,\n        currentTime: 0,\n        targetTime: selectedDuration,\n        currentExercise: selectedExercise || undefined,\n        // Only clear workout mode for standalone exercises (preserve it for workout mode)\n        workoutMode: prev.workoutMode || undefined,\n        // Clear workout-specific rest state\n        isResting: false,\n        restTimeRemaining: undefined\n      }));\n\n      // Announce countdown start\n      if (appSettings.sound_enabled) {\n        audioService.announceText(`Get ready for ${selectedExercise.name}. Starting in ${appSettings.pre_timer_countdown} seconds`);\n      }\n\n      const countdownStartTime = Date.now();\n\n      // Countdown interval\n      intervalRef.current = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - countdownStartTime) / 1000);\n        const remaining = appSettings.pre_timer_countdown - elapsed;\n\n        if (remaining <= 0) {\n          // Countdown finished, start actual timer\n          clearInterval(intervalRef.current!);\n          startActualTimer();\n        } else {\n          // Update countdown display\n          setTimerState(prev => ({\n            ...prev,\n            countdownTime: remaining\n          }));\n\n          // Beep on each countdown second\n          if (remaining <= 3 && elapsed > appSettings.pre_timer_countdown - remaining - 1) {\n            if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n              audioService.playIntervalFeedback(appSettings.sound_enabled, appSettings.vibration_enabled, appSettings.beep_volume);\n            }\n            if (appSettings.sound_enabled) {\n              audioService.announceText(remaining.toString());\n            }\n          }\n        }\n      }, 100);\n    } else {\n      // No countdown, start timer immediately\n      startActualTimer();\n    }\n  }, [selectedExercise, selectedDuration, appSettings.pre_timer_countdown, appSettings.sound_enabled, appSettings.vibration_enabled, appSettings.beep_volume, wakeLockSupported, requestWakeLock, startActualTimer]);\n\n  const stopTimer = useCallback(async (isCompletion: boolean = false) => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    // Log the activity for manual stops (not for completions, which are handled separately)\n    const { currentTime, currentExercise, isRunning } = timerState;\n    if (!isCompletion && isRunning && currentExercise && currentTime > 0) {\n      const activityLog: ActivityLog = {\n        id: crypto.randomUUID(),\n        exercise_id: currentExercise.id,\n        exercise_name: currentExercise.name,\n        duration: Math.round(currentTime), // Round to avoid floating-point precision issues\n        timestamp: new Date().toISOString(),\n        notes: `Stopped after ${Math.round(currentTime)}s`,\n        updated_at: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        deleted: false,\n        version: 1\n      };\n\n      if (consentService.hasConsent()) {\n        storageService.saveActivityLog(activityLog);\n      }\n    }\n\n    // Play stop sound and vibration\n    if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n      await audioService.playStopFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n    }\n\n    // Release wake lock when timer stops\n    if (wakeLockActive) {\n      await releaseWakeLock();\n    }\n\n    setTimerState(prev => ({ ...prev, isRunning: false, isCountdown: false, countdownTime: 0 }));\n  }, [appSettings.sound_enabled, appSettings.vibration_enabled, wakeLockActive, releaseWakeLock, timerState]);\n\n  const resetTimer = useCallback(async () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    // Reset beep counter\n    lastBeepIntervalRef.current = 0;\n\n    // Release wake lock when timer resets\n    if (wakeLockActive) {\n      await releaseWakeLock();\n    }\n\n    setTimerState(prev => ({\n      ...prev,\n      isRunning: false,\n      currentTime: 0,\n      targetTime: undefined,\n      startTime: undefined,\n      currentExercise: undefined,\n      isCountdown: false,\n      countdownTime: 0,\n      isResting: false,\n      restTimeRemaining: undefined,\n      // Reset standalone rep/set tracking\n      currentSet: undefined,\n      totalSets: undefined,\n      currentRep: undefined,\n      totalReps: undefined,\n      workoutMode: undefined\n    }));\n\n    // Reset duration to default for the current exercise\n    if (selectedExercise) {\n      if (selectedExercise.exercise_type === 'time_based') {\n        setSelectedDuration(selectedExercise.default_duration as TimerPreset);\n      } else if (selectedExercise.exercise_type === 'repetition_based') {\n  const baseRep = selectedExercise.rep_duration_seconds || BASE_REP_TIME;\n  const repDuration = Math.round(baseRep * appSettings.rep_speed_factor);\n        setSelectedDuration(repDuration as TimerPreset);\n      }\n    }\n  }, [wakeLockActive, releaseWakeLock, selectedExercise, appSettings.rep_speed_factor]);\n\n  // Start workout-guided timer mode\n  const startWorkoutMode = useCallback(async (workoutData: { workoutId: string; workoutName: string; exercises: WorkoutExercise[] }) => {\n    if (!workoutData.exercises || workoutData.exercises.length === 0) {\n      alert('This workout has no exercises');\n      return;\n    }\n\n    // Create a new workout session for logging\n  const sessionId = crypto.randomUUID();\n    \n    // Initialize workout mode state\n    setTimerState(prev => ({\n      ...prev,\n      workoutMode: {\n        workoutId: workoutData.workoutId,\n        workoutName: workoutData.workoutName,\n        exercises: workoutData.exercises,\n        currentExerciseIndex: 0,\n        isResting: false,\n        sessionId\n      },\n      isRunning: false,\n      currentTime: 0,\n      targetTime: undefined,\n      isCountdown: false,\n      countdownTime: 0\n    }));\n\n    // Find the first exercise and load it\n    const firstWorkoutExercise = workoutData.exercises[0];\n    const firstExercise = exercises.find(ex => ex.id === firstWorkoutExercise.exercise_id);\n    \n    if (firstExercise) {\n      setSelectedExercise(firstExercise);\n      \n      // Set duration/reps based on exercise type and custom values\n      if (firstExercise.exercise_type === 'time_based') {\n        const duration = firstWorkoutExercise.custom_duration || firstExercise.default_duration || 30;\n        setSelectedDuration(duration as TimerPreset);\n      } else if (firstExercise.exercise_type === 'repetition_based') {\n        // For rep-based exercises, we'll use a timer for each repetition\n        const sets = firstWorkoutExercise.custom_sets || firstExercise.default_sets || 1;\n        const reps = firstWorkoutExercise.custom_reps || firstExercise.default_reps || 10;\n        const repBase = firstExercise.rep_duration_seconds || BASE_REP_TIME;\n        const repDuration = Math.round(repBase * appSettings.rep_speed_factor);\n\n        setTimerState(prev => ({\n          ...prev,\n          workoutMode: prev.workoutMode ? {\n            ...prev.workoutMode,\n            currentSet: 0,\n            totalSets: sets,\n            currentRep: 0,\n            totalReps: reps\n          } : prev.workoutMode\n        }));\n\n        setSelectedDuration(repDuration as TimerPreset);\n      }\n    }\n\n    // Announce workout start\n    if (appSettings.sound_enabled) {\n      audioService.announceText(`Starting workout: ${workoutData.workoutName}. ${workoutData.exercises.length} exercises planned.`);\n    }\n  }, [exercises, appSettings.sound_enabled, appSettings.rep_speed_factor]);\n\n  // Advance workout to next exercise or complete workout\n  const advanceWorkout = useCallback(async () => {\n    const { workoutMode } = timerState;\n    if (!workoutMode) return;\n\n    const currentIndex = workoutMode.currentExerciseIndex;\n    const isLastExercise = currentIndex >= workoutMode.exercises.length - 1;\n    \n    console.log('advanceWorkout called:', {\n      currentIndex,\n      totalExercises: workoutMode.exercises.length,\n      isLastExercise,\n      workoutName: workoutMode.workoutName\n    });\n\n    if (isLastExercise) {\n      // Workout completed\n      console.log('🎉 Workout completed! Logging workout session...');\n      console.log('🔍 About to check consent and session for workout logging...');\n      if (appSettings.sound_enabled) {\n        audioService.announceText(`Workout completed! Great job on ${workoutMode.workoutName}`);\n      }\n\n      // Save workout session completion\n      const hasConsent = consentService.hasConsent();\n      const hasSessionId = !!workoutMode.sessionId;\n      console.log('Workout completion - consent check:', {\n        hasConsent,\n        hasSessionId,\n        sessionId: workoutMode.sessionId\n      });\n      \n      if (hasConsent && hasSessionId) {\n  console.log('✅ Creating workout session for logging...');\n  // Compute total workout duration consistent with Activity Log aggregation\n  const { total: totalWorkoutDuration } = computeWorkoutDurations(workoutMode.exercises, exercises, appSettings);\n\n        const workoutSession: WorkoutSession = {\n          id: workoutMode.sessionId!,\n          workout_id: workoutMode.workoutId,\n          workout_name: workoutMode.workoutName,\n          // Best-effort start time based on aggregated duration\n          start_time: new Date(Date.now() - (totalWorkoutDuration * 1000)).toISOString(),\n          end_time: new Date().toISOString(),\n          exercises: [], // TODO: Track individual exercise completion in Phase 5\n          is_completed: true,\n          completion_percentage: 100,\n          total_duration: totalWorkoutDuration,\n          updated_at: new Date().toISOString(),\n          created_at: new Date().toISOString(),\n          deleted: false,\n          version: 1\n        };\n        \n        try {\n          console.log('💾 Saving workout session to storage...', workoutSession);\n          await storageService.saveWorkoutSession(workoutSession);\n          console.log('✅ Workout session saved successfully');\n          \n          // Create a single workout activity log entry for the activity log page\n          console.log('📝 Creating workout activity log entry...');\n          const { perExercise, total: totalWorkoutDuration } = computeWorkoutDurations(workoutMode.exercises, exercises, appSettings);\n          const exerciseNameById = new Map(exercises.map(ex => [ex.id, ex.name]));\n          \n          const workoutActivityLog: ActivityLog = {\n            id: crypto.randomUUID(),\n            exercise_id: crypto.randomUUID(),\n            exercise_name: workoutMode.workoutName,\n            duration: totalWorkoutDuration,\n            timestamp: new Date().toISOString(),\n            notes: `Workout completed with ${workoutMode.exercises.length} exercises`,\n            workout_id: workoutMode.workoutId,\n            is_workout: true,\n            exercises: perExercise.map(d => ({\n              exercise_id: d.exercise_id,\n              exercise_name: exerciseNameById.get(d.exercise_id) || 'Unknown Exercise',\n              duration: d.duration,\n              ...(d.sets ? { sets: d.sets } : {}),\n              ...(d.reps ? { reps: d.reps } : {})\n            })),\n            updated_at: new Date().toISOString(),\n            created_at: new Date().toISOString(),\n            deleted: false,\n            version: 1\n          };\n          \n          console.log(`📝 Saving workout activity log:`, workoutActivityLog);\n          await storageService.saveActivityLog(workoutActivityLog);\n          console.log('✅ Workout activity log saved successfully');\n        } catch (error) {\n          console.error('❌ Failed to save workout session or activity logs:', error);\n        }\n      } else {\n        console.log('❌ Workout session not saved:', {\n          reason: !hasConsent ? 'No consent' : 'No session ID',\n          hasConsent,\n          hasSessionId\n        });\n      }\n\n      // Update timer state to show workout completion before resetting\n      setTimerState(prev => ({\n        ...prev,\n        workoutMode: prev.workoutMode ? {\n          ...prev.workoutMode,\n          currentExerciseIndex: prev.workoutMode.exercises.length, // Set to total count to show 100%\n          isResting: false\n        } : prev.workoutMode,\n        isRunning: false\n      }));\n\n      // Delay reset to allow UI to show completion state\n      setTimeout(async () => {\n        await resetTimer();\n      }, 2000); // 2 second delay to show completion\n    } else {\n      // Move to next exercise\n      const nextExerciseIndex = currentIndex + 1;\n      const nextWorkoutExercise = workoutMode.exercises[nextExerciseIndex];\n      const nextExercise = exercises.find(ex => ex.id === nextWorkoutExercise.exercise_id);\n\n      if (nextExercise) {\n        // Check if we need a rest period\n        const currentWorkoutExercise = workoutMode.exercises[currentIndex];\n        const restTime = currentWorkoutExercise.custom_rest_time || 30; // Default 30s rest\n\n        if (restTime > 0) {\n          // Start rest period\n          console.log('Starting rest period, selectedExercise remains:', selectedExercise?.name);\n          setTimerState(prev => ({\n            ...prev,\n            workoutMode: prev.workoutMode ? {\n              ...prev.workoutMode,\n              // Don't advance currentExerciseIndex during rest - only when exercise actually starts\n              // Keep current index until we actually begin the next exercise\n              isResting: true,\n              restTimeRemaining: restTime\n            } : prev.workoutMode,\n            isRunning: true,\n            currentTime: 0,\n            targetTime: restTime,\n            currentExercise: nextExercise, // Update currentExercise to the next exercise during rest\n            isCountdown: false,\n            countdownTime: 0\n          }));\n\n          if (appSettings.sound_enabled) {\n            audioService.announceText(`Rest time: ${restTime} seconds. Next exercise: ${nextExercise.name}`);\n          }\n\n          // Start the rest timer\n          const restStartTime = Date.now();\n          if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n          }\n          \n          intervalRef.current = setInterval(() => {\n            const elapsed = Math.floor((Date.now() - restStartTime) / 1000);\n            \n            setTimerState(prev => {\n              if (!prev.isRunning || !prev.targetTime) {\n                return prev;\n              }\n\n              const remaining = prev.targetTime - elapsed;\n\n              if (remaining <= 0) {\n                // Rest timer completed - will be handled in useEffect\n                return { ...prev, currentTime: prev.targetTime };\n              }\n\n              // Update rest time remaining\n              if (prev.workoutMode?.isResting) {\n                return { \n                  ...prev, \n                  currentTime: elapsed,\n                  workoutMode: prev.workoutMode ? {\n                    ...prev.workoutMode,\n                    restTimeRemaining: Math.max(0, remaining)\n                  } : prev.workoutMode\n                };\n              }\n\n              return prev;\n            });\n          }, 1000);\n        } else {\n          // No rest, go directly to next exercise\n          setSelectedExercise(nextExercise);\n          setTimerState(prev => ({\n            ...prev,\n            workoutMode: prev.workoutMode ? {\n              ...prev.workoutMode,\n              currentExerciseIndex: nextExerciseIndex,\n              isResting: false\n            } : prev.workoutMode,\n            isRunning: false,\n            currentTime: 0,\n            targetTime: undefined\n          }));\n\n          // Set duration/reps for next exercise\n          if (nextExercise.exercise_type === 'time_based') {\n            const duration = nextWorkoutExercise.custom_duration || nextExercise.default_duration || 30;\n            setSelectedDuration(duration as TimerPreset);\n          } else if (nextExercise.exercise_type === 'repetition_based') {\n            const sets = nextWorkoutExercise.custom_sets || nextExercise.default_sets || 1;\n            const reps = nextWorkoutExercise.custom_reps || nextExercise.default_reps || 10;\n            const repBase = nextExercise.rep_duration_seconds || BASE_REP_TIME;\n            const repDuration = Math.round(repBase * appSettings.rep_speed_factor);\n            \n            setTimerState(prev => ({\n              ...prev,\n              workoutMode: prev.workoutMode ? {\n                ...prev.workoutMode,\n                currentSet: 1,\n                totalSets: sets,\n                currentRep: 1,\n                totalReps: reps\n              } : prev.workoutMode\n            }));\n            \n            setSelectedDuration(repDuration as TimerPreset);\n          }\n\n          if (appSettings.sound_enabled) {\n            audioService.announceText(`Next exercise: ${nextExercise.name}`);\n          }\n        }\n      }\n    }\n  }, [timerState, selectedExercise?.name, exercises, appSettings.sound_enabled, appSettings.rep_speed_factor, resetTimer]);\n\n  // Handle timer completion\n  useEffect(() => {\n    const { isRunning, currentTime, targetTime, currentExercise, workoutMode } = timerState;\n    \n    // Only process completion when timer reaches target time exactly (not exceeded)\n    if (isRunning && targetTime && currentTime === targetTime && !timerState.isCountdown) {\n      // Clear the interval first to prevent further updates\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      console.log('Timer completion useEffect triggered for:', currentExercise?.name || 'unknown exercise');\n      \n      if (workoutMode) {\n        // Get the actual current exercise from workout mode for accurate logging\n        const currentWorkoutExercise = workoutMode.exercises[workoutMode.currentExerciseIndex];\n        const actualCurrentExercise = exercises.find(ex => ex.id === currentWorkoutExercise.exercise_id);\n        console.log('Actual current exercise from workout mode:', actualCurrentExercise?.name);\n        console.log('Workout state:', {\n          currentExerciseIndex: workoutMode.currentExerciseIndex,\n          totalExercises: workoutMode.exercises.length,\n          isResting: workoutMode.isResting,\n          selectedExerciseName: currentExercise?.name,\n          actualExerciseName: actualCurrentExercise?.name\n        });\n        \n        if (workoutMode.isResting) {\n          // Rest period completed, start next exercise automatically\n          // Calculate next exercise index since currentExerciseIndex still points to completed exercise\n          const nextExerciseIndex = workoutMode.currentExerciseIndex + 1;\n          \n          // Check if workout is complete\n          if (nextExerciseIndex >= workoutMode.exercises.length) {\n            console.log('🎉 Workout completed after rest period!');\n            advanceWorkout();\n            return;\n          }\n          \n          const nextWorkoutExercise = workoutMode.exercises[nextExerciseIndex];\n          const nextExercise = exercises.find(ex => ex.id === nextWorkoutExercise.exercise_id);\n          \n          if (nextExercise) {\n            console.log('Rest completed, changing selectedExercise from', selectedExercise?.name, 'to', nextExercise.name);\n            setSelectedExercise(nextExercise);\n\n            // Set duration/reps for next exercise\n            if (nextExercise.exercise_type === 'time_based') {\n              const duration = nextWorkoutExercise.custom_duration || nextExercise.default_duration || 30;\n              console.log('Setting duration for', nextExercise.name, ':', {\n                custom_duration: nextWorkoutExercise.custom_duration,\n                default_duration: nextExercise.default_duration,\n                finalDuration: duration\n              });\n              setSelectedDuration(duration as TimerPreset);\n              console.log('After setSelectedDuration, selectedDuration should be:', duration);\n              \n              setTimerState(prev => ({\n                ...prev,\n                workoutMode: prev.workoutMode ? {\n                  ...prev.workoutMode,\n                  currentExerciseIndex: nextExerciseIndex, // NOW advance to next exercise\n                  isResting: false,\n                  restTimeRemaining: undefined\n                } : prev.workoutMode,\n                isRunning: false, // Will be started by auto-start logic below\n                currentTime: 0,\n                targetTime: duration,\n                currentExercise: nextExercise, // Update to the new exercise\n                isCountdown: false,\n                countdownTime: 0\n              }));\n            } else if (nextExercise.exercise_type === 'repetition_based') {\n              const sets = nextWorkoutExercise.custom_sets || nextExercise.default_sets || 1;\n              const reps = nextWorkoutExercise.custom_reps || nextExercise.default_reps || 10;\n              const repBase = nextExercise.rep_duration_seconds || BASE_REP_TIME;\n              const repDuration = Math.round(repBase * appSettings.rep_speed_factor);\n              \n              setSelectedDuration(repDuration as TimerPreset);\n              \n              setTimerState(prev => ({\n                ...prev,\n                workoutMode: prev.workoutMode ? {\n                  ...prev.workoutMode,\n                  currentExerciseIndex: nextExerciseIndex, // NOW advance to next exercise\n                  currentSet: 0,\n                  totalSets: sets,\n                  currentRep: 0,\n                  totalReps: reps,\n                  isResting: false,\n                  restTimeRemaining: undefined\n                } : prev.workoutMode,\n                isRunning: false, // Will be started by auto-start logic below\n                currentTime: 0,\n                targetTime: repDuration,\n                currentExercise: nextExercise, // Update to the new exercise\n                isCountdown: false,\n                countdownTime: 0\n              }));\n            }\n\n            if (appSettings.sound_enabled) {\n              audioService.announceText(`Rest complete. Starting ${nextExercise.name}`);\n            }\n\n            // Auto-start the timer after a short delay to ensure state is updated\n            setTimeout(() => {\n              console.log('Auto-starting timer with selectedDuration:', selectedDuration, 'for exercise:', nextExercise.name);\n              console.log('Calling startActualTimer directly since targetTime is already set correctly');\n              startActualTimer(); // Call startActualTimer directly instead of startTimer\n            }, 100);\n          }\n        } else {\n          // Exercise completed (not in rest period)\n          // Use the actual current exercise from workout mode for accurate processing\n          const currentWorkoutExercise = workoutMode.exercises[workoutMode.currentExerciseIndex];\n          const actualCurrentExercise = exercises.find(ex => ex.id === currentWorkoutExercise.exercise_id);\n          \n          console.log('Processing exercise completion for:', actualCurrentExercise?.name);\n          console.log('Exercise type:', actualCurrentExercise?.exercise_type);\n          console.log('Has workout rep/set state:', !!workoutMode.totalReps, !!workoutMode.totalSets);\n          \n          // Check if this is a repetition-based exercise that needs rep/set advancement\n          if (actualCurrentExercise?.exercise_type === 'repetition_based' && workoutMode.totalReps && workoutMode.totalSets) {\n            console.log('Processing rep-based exercise completion...');\n            const currentRep = workoutMode.currentRep || 0;\n            const currentSet = workoutMode.currentSet || 0;\n            const totalReps = workoutMode.totalReps;\n            const totalSets = workoutMode.totalSets;\n            \n            // Check if we're completing a rep (not starting a new one)\n            const nextRep = currentRep + 1;\n            \n            if (nextRep < totalReps) {\n              // More reps to go in current set, advance rep counter\n              setTimerState(prev => ({\n                ...prev,\n                workoutMode: prev.workoutMode ? {\n                  ...prev.workoutMode,\n                  currentRep: nextRep\n                } : prev.workoutMode,\n                currentTime: 0,\n                isRunning: true,\n                targetTime: selectedDuration\n              }));\n              \n              // More reps to go, announce next rep\n              if (appSettings.sound_enabled) {\n                audioService.announceText(`Rep ${nextRep + 1} of ${totalReps}`);\n              }\n              \n              // Restart timer interval for next rep without full reset\n              if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n              }\n              \n              const newStartTime = Date.now();\n              // Use helper function for consistent smooth timing\n              intervalRef.current = createTimerInterval(newStartTime, true); // true = rep-based exercise\n            } else if (nextRep === totalReps) {\n              // Just completed the last rep of current set\n              setTimerState(prev => ({\n                ...prev,\n                workoutMode: prev.workoutMode ? {\n                  ...prev.workoutMode,\n                  currentRep: totalReps // Mark all reps completed for this set\n                } : prev.workoutMode,\n                currentTime: 0,\n                isRunning: false // Stop the timer\n              }));\n              \n              if (currentSet < totalSets - 1) {\n                // More sets to go, start rest period\n                setTimerState(prev => ({\n                  ...prev,\n                  workoutMode: prev.workoutMode ? {\n                    ...prev.workoutMode,\n                    currentSet: currentSet,  // Keep current set during rest\n                    currentRep: totalReps    // All reps completed in current set\n                  } : prev.workoutMode,\n                  isRunning: true,\n                  isResting: true,\n                  restTimeRemaining: REST_TIME_BETWEEN_SETS,\n                  currentTime: 0,\n                  targetTime: REST_TIME_BETWEEN_SETS\n                }));\n                \n                if (appSettings.sound_enabled) {\n                  audioService.announceText(`Set completed! Rest for ${REST_TIME_BETWEEN_SETS} seconds`);\n                }\n                \n                // Play rest start feedback\n                if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n                  audioService.playRestStartFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n                }\n                \n                // Start rest timer\n                if (intervalRef.current) {\n                  clearInterval(intervalRef.current);\n                }\n                \n                const restStartTime = Date.now();\n                intervalRef.current = setInterval(() => {\n                  const elapsed = Math.floor((Date.now() - restStartTime) / 1000);\n                  const remaining = REST_TIME_BETWEEN_SETS - elapsed;\n                  \n                  setTimerState(prev => {\n                    if (!prev.isRunning || !prev.isResting) {\n                      return prev;\n                    }\n\n                    if (remaining <= 0) {\n                      // Rest completed, transition to next set\n                      if (appSettings.sound_enabled) {\n                        audioService.announceText(`Rest complete! Starting set ${currentSet + 2} of ${totalSets}`);\n                      }\n                      \n                      // Play rest end feedback\n                      if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n                        audioService.playRestEndFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n                      }\n                      \n                      // Clear rest interval to prevent double triggers\n                      clearInterval(intervalRef.current!);\n                      \n                      // Start new timer for next set immediately\n                      const nextSetStartTime = Date.now();\n                      // Use helper function - check if current exercise is rep-based\n                      const currentExercise = exercises.find(ex => ex.id === prev.workoutMode?.exercises[prev.workoutMode.currentExerciseIndex]?.exercise_id);\n                      const isRepBasedExercise = currentExercise?.exercise_type === 'repetition_based';\n                      intervalRef.current = createTimerInterval(nextSetStartTime, isRepBasedExercise);\n                      \n                      return {\n                        ...prev,\n                        workoutMode: prev.workoutMode ? {\n                          ...prev.workoutMode,\n                          currentSet: currentSet + 1,\n                          currentRep: 0\n                        } : prev.workoutMode,\n                        currentTime: 0,\n                        isResting: false,\n                        restTimeRemaining: undefined,\n                        targetTime: selectedDuration\n                      };\n                    } else {\n                      return {\n                        ...prev,\n                        currentTime: elapsed,\n                        restTimeRemaining: remaining\n                      };\n                    }\n                  });\n                }, 1000);\n              } else {\n                // All sets completed for this exercise, advance to next exercise\n                if (appSettings.sound_enabled) {\n                  audioService.announceText('Exercise completed!');\n                }\n                \n                // Advance to next exercise in workout\n                advanceWorkout();\n              }\n            }\n          } else {\n            // Time-based exercise completed, advance workout\n            console.log('Time-based exercise completed in workout mode:', actualCurrentExercise?.name);\n            console.log('Calling advanceWorkout to move to next exercise or complete workout...');\n            advanceWorkout();\n          }\n        }\n      } else {\n        // Standard timer completion (non-workout mode)\n        \n        // Check if this is a standalone repetition-based exercise\n        if (currentExercise?.exercise_type === 'repetition_based' && timerState.totalReps && timerState.totalSets) {\n          const currentRep = timerState.currentRep || 0;\n          const currentSet = timerState.currentSet || 0;\n          const totalReps = timerState.totalReps;\n          const totalSets = timerState.totalSets;\n          \n          if (currentRep < totalReps) {\n            // Advance to next rep in current set (or complete current rep)\n            const nextRep = currentRep + 1;\n            \n            setTimerState(prev => ({\n              ...prev,\n              currentRep: nextRep,\n              currentTime: 0,\n              isRunning: nextRep < totalReps,  // Stop running if this was the last rep\n              targetTime: selectedDuration\n            }));\n            \n            if (nextRep < totalReps) {\n              // More reps to go, announce next rep\n              if (appSettings.sound_enabled) {\n                audioService.announceText(`Rep ${nextRep + 1} of ${totalReps}`);\n              }\n              \n              // Restart timer interval for next rep without full reset\n              if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n              }\n              \n              const newStartTime = Date.now();\n              // Use helper function for consistent smooth timing\n              intervalRef.current = createTimerInterval(newStartTime, true); // true = rep-based exercise\n            } else {\n              // This was the last rep of the set, check if we need to advance to next set\n              if (currentSet < totalSets - 1) {\n                // More sets to go, start rest period\n                setTimerState(prev => ({\n                  ...prev,\n                  isRunning: true,\n                  isResting: true,\n                  restTimeRemaining: REST_TIME_BETWEEN_SETS,\n                  currentTime: 0,\n                  targetTime: REST_TIME_BETWEEN_SETS\n                }));\n                \n                if (appSettings.sound_enabled) {\n                  audioService.announceText(`Set completed! Rest for ${REST_TIME_BETWEEN_SETS} seconds`);\n                }\n                \n                // Play rest start feedback\n                if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n                  audioService.playRestStartFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n                }\n                \n                // Start rest timer\n                if (intervalRef.current) {\n                  clearInterval(intervalRef.current);\n                }\n                \n                const restStartTime = Date.now();\n                intervalRef.current = setInterval(() => {\n                  const elapsed = Math.floor((Date.now() - restStartTime) / 1000);\n                  const remaining = REST_TIME_BETWEEN_SETS - elapsed;\n                  \n                  setTimerState(prev => {\n                    if (!prev.isRunning || !prev.isResting) {\n                      return prev;\n                    }\n\n                    if (remaining <= 0) {\n                      // Rest completed, transition to next set\n                      if (appSettings.sound_enabled) {\n                        audioService.announceText(`Rest complete! Starting set ${currentSet + 2} of ${totalSets}`);\n                      }\n                      \n                      // Play rest end feedback\n                      if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n                        audioService.playRestEndFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n                      }\n                      \n                      // Clear rest interval to prevent double triggers\n                      clearInterval(intervalRef.current!);\n                      \n                      // Start new timer for next set immediately\n                      const nextSetStartTime = Date.now();\n                      // Use helper function - check if current exercise is rep-based\n                      const currentExercise = exercises.find(ex => ex.id === prev.workoutMode?.exercises[prev.workoutMode.currentExerciseIndex]?.exercise_id);\n                      const isRepBasedExercise = currentExercise?.exercise_type === 'repetition_based';\n                      intervalRef.current = createTimerInterval(nextSetStartTime, isRepBasedExercise);\n                      \n                      return {\n                        ...prev,\n                        currentSet: currentSet + 1,\n                        currentRep: 0,\n                        currentTime: 0,\n                        isResting: false,\n                        restTimeRemaining: undefined,\n                        targetTime: selectedDuration\n                      };\n                    } else {\n                      return {\n                        ...prev,\n                        currentTime: elapsed,\n                        restTimeRemaining: remaining\n                      };\n                    }\n                  });\n                }, 1000);\n              } else {\n                // All reps and sets completed\n                if (appSettings.sound_enabled) {\n                  audioService.announceText(`Exercise completed! Great job on ${currentExercise.name}`);\n                }\n                \n                // Log the activity\n                if (currentExercise) {\n                  const activityLog: ActivityLog = {\n                    id: crypto.randomUUID(),\n                    exercise_id: currentExercise.id,\n                    exercise_name: currentExercise.name,\n                    duration: Math.round(totalSets * totalReps * (targetTime || 0)), // Total time for all reps/sets, rounded\n                    timestamp: new Date().toISOString(),\n                    notes: `Completed ${totalSets} sets of ${totalReps} reps`,\n                    updated_at: new Date().toISOString(),\n                    created_at: new Date().toISOString(),\n                    deleted: false,\n                    version: 1\n                  };\n\n                  if (consentService.hasConsent()) {\n                    storageService.saveActivityLog(activityLog);\n                  }\n                }\n                \n                // Stop the timer - exercise complete\n                stopTimer(true);\n              }\n            }\n            \n            return;\n          } else if (currentSet < totalSets - 1) {\n            // Start rest period before next set\n            setTimerState(prev => ({\n              ...prev,\n              isRunning: true,\n              isResting: true,\n              restTimeRemaining: REST_TIME_BETWEEN_SETS,\n              currentTime: 0,\n              targetTime: REST_TIME_BETWEEN_SETS\n            }));\n            \n            if (appSettings.sound_enabled) {\n              audioService.announceText(`Set completed! Rest for ${REST_TIME_BETWEEN_SETS} seconds`);\n            }\n            \n            // Play rest start feedback\n            if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n              audioService.playRestStartFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n            }\n            \n            // Start rest timer\n            if (intervalRef.current) {\n              clearInterval(intervalRef.current);\n            }\n            \n            const restStartTime = Date.now();\n            intervalRef.current = setInterval(() => {\n              const elapsed = Math.floor((Date.now() - restStartTime) / 1000);\n              const remaining = REST_TIME_BETWEEN_SETS - elapsed;\n              \n              setTimerState(prev => {\n                if (!prev.isRunning || !prev.isResting) {\n                  return prev;\n                }\n\n                if (remaining <= 0) {\n                  // Rest completed, transition to next set\n                  if (appSettings.sound_enabled) {\n                    audioService.announceText(`Rest complete! Starting set ${currentSet + 2} of ${totalSets}`);\n                  }\n                  \n                  // Play rest end feedback\n                  if (appSettings.sound_enabled || appSettings.vibration_enabled) {\n                    audioService.playRestEndFeedback(appSettings.sound_enabled, appSettings.vibration_enabled);\n                  }\n                  \n                  // Clear rest interval to prevent double triggers\n                  clearInterval(intervalRef.current!);\n                  \n                  // Clear rest interval and start rep timer for next set\n                  clearInterval(intervalRef.current!);\n                  \n                  // Start new timer for next set immediately\n                  const nextSetStartTime = Date.now();\n                  // Use helper function - check if current exercise is rep-based\n                  const currentExercise = exercises.find(ex => ex.id === prev.workoutMode?.exercises[prev.workoutMode.currentExerciseIndex]?.exercise_id);\n                  const isRepBasedExercise = currentExercise?.exercise_type === 'repetition_based';\n                  intervalRef.current = createTimerInterval(nextSetStartTime, isRepBasedExercise);\n                  \n                  return { \n                    ...prev, \n                    currentTime: 0,\n                    restTimeRemaining: 0,\n                    isResting: false,\n                    currentSet: currentSet + 1,\n                    currentRep: 0,\n                    targetTime: selectedDuration\n                  };\n                }\n\n                return { \n                  ...prev, \n                  currentTime: elapsed,\n                  restTimeRemaining: remaining \n                };\n              });\n\n              // Beep at 3, 2, 1 seconds remaining during rest\n              if (remaining <= 3 && remaining > 0) {\n                if (appSettings.sound_enabled) {\n                  audioService.announceText(remaining.toString());\n                }\n              }\n            }, 1000);\n            \n            return;\n          } else {\n            // All reps and sets completed\n            if (appSettings.sound_enabled) {\n              audioService.announceText(`Exercise completed! Great job on ${currentExercise.name}`);\n            }\n            \n            // Log the activity\n            if (currentExercise) {\n              const activityLog: ActivityLog = {\n                id: crypto.randomUUID(),\n                exercise_id: currentExercise.id,\n                exercise_name: currentExercise.name,\n                duration: Math.round(totalSets * totalReps * (targetTime || 0)), // Total time for all reps/sets, rounded\n                timestamp: new Date().toISOString(),\n                notes: `Completed ${totalSets} sets of ${totalReps} reps`,\n                updated_at: new Date().toISOString(),\n                created_at: new Date().toISOString(),\n                deleted: false,\n                version: 1\n              };\n\n              if (consentService.hasConsent()) {\n                storageService.saveActivityLog(activityLog);\n              }\n            }\n            \n            // Stop timer completely - all reps and sets done\n            stopTimer(true);\n          }\n        } else {\n          // Time-based exercise or rep-based without proper tracking\n          if (currentExercise) {\n            const activityLog: ActivityLog = {\n              id: crypto.randomUUID(),\n              exercise_id: currentExercise.id,\n              exercise_name: currentExercise.name,\n              duration: targetTime,\n              timestamp: new Date().toISOString(),\n              notes: `Completed ${targetTime}s interval timer`,\n              updated_at: new Date().toISOString(),\n              created_at: new Date().toISOString(),\n              deleted: false,\n              version: 1\n            };\n\n            if (consentService.hasConsent()) {\n              storageService.saveActivityLog(activityLog);\n            }\n          }\n\n          // Stop timer (pass true to indicate this is a completion, not manual stop)\n          stopTimer(true);\n\n          // Announce completion\n          if (appSettings.sound_enabled) {\n            audioService.announceText(`Timer completed! Great job on ${currentExercise?.name}`);\n          }\n        }\n      }\n    }\n  }, [timerState, stopTimer, advanceWorkout, exercises, appSettings.sound_enabled, appSettings.vibration_enabled, appSettings.rep_speed_factor, selectedExercise?.name, selectedDuration, startActualTimer, createTimerInterval]);\n\n  // Cleanup timer interval on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  // Update app settings\n  const updateAppSettings = React.useCallback(async (newSettings: Partial<AppSettings>) => {\n    if (!hasConsent) return;\n\n    // Compute next settings deterministically from current state to avoid relying on\n    // a variable mutated inside the state updater (which can be deferred in some modes).\n    const nextSettings: AppSettings = {\n      ...appSettings,\n      ...newSettings,\n      // Always bump version and mark dirty so sync pushes reliably\n      version: (appSettings.version || 1) + 1,\n      updated_at: new Date().toISOString(),\n      dirty: 1,\n      op: 'upsert'\n    };\n    setAppSettings(nextSettings);\n\n    // Persist the same object we set in state\n    try {\n  await storageService.saveAppSettings(nextSettings);\n  // Nudge sync so app_settings exist on server for other devices\n  void syncService.sync();\n    } catch (error) {\n      console.error('Failed to save app settings:', error);\n    }\n  }, [hasConsent, appSettings]);\n\n  const handleSetSelectedExercise = React.useCallback((exercise: Exercise | null, settings?: AppSettings) => {\n    setSelectedExercise(exercise);\n    updateAppSettings({ last_selected_exercise_id: exercise ? exercise.id : null });\n    \n    // Set appropriate duration for rep-based exercises\n    if (exercise?.exercise_type === 'repetition_based') {\n      if (settings) {\n        // Use provided settings\n        const baseRep = exercise.rep_duration_seconds || BASE_REP_TIME;\n        const repDuration = Math.round(baseRep * settings.rep_speed_factor);\n        setSelectedDuration(repDuration as TimerPreset);\n      } else {\n        // Use current settings from state\n        setAppSettings(current => {\n          const baseRep = exercise.rep_duration_seconds || BASE_REP_TIME;\n          const repDuration = Math.round(baseRep * current.rep_speed_factor);\n          setSelectedDuration(repDuration as TimerPreset);\n          return current; // Don't change settings, just read them\n        });\n      }\n    }\n  }, [updateAppSettings]);\n\n  // Initialize app data after consent (run once when consent is granted)\n  useEffect(() => {\n    const initializeApp = async () => {\n      if (hasConsent) {\n        try {\n          if (process.env.NODE_ENV === 'development') {\n            console.log('🚀 Initializing app with consent granted');\n            \n            // Add storage service to window for debugging\n            if (typeof window !== 'undefined') {\n              (window as Window & { storageService?: StorageService; resetDB?: () => Promise<void> }).storageService = storageService;\n              (window as Window & { storageService?: StorageService; resetDB?: () => Promise<void> }).resetDB = () => storageService.resetDatabase();\n              console.log('🔧 Debug helpers: window.storageService, window.resetDB()');\n            }\n          }\n\n          // Register service worker for offline functionality\n          console.log('🚀 Initializing PWA capabilities...');\n          const maybePromise = registerServiceWorker();\n          const isPromiseLike = <T,>(val: unknown): val is PromiseLike<T> => (\n            typeof val === 'object' && val !== null && 'then' in (val as Record<string, unknown>) &&\n            typeof (val as { then?: unknown }).then === 'function'\n          );\n          if (isPromiseLike<{ updateAvailable?: boolean }>(maybePromise)) {\n            maybePromise\n              .then((swInfo) => {\n                if (swInfo?.updateAvailable) {\n                  console.log('📦 App update available - refresh to update');\n                }\n              })\n              .catch((error) => {\n                console.error('❌ Service worker registration failed:', error);\n              });\n          }\n\n          // Load exercises from storage or use initial data\n          const storedExercises = await storageService.getExercises();\n          let allExercises: Exercise[];\n          \n          if (storedExercises.length === 0) {\n            // No stored exercises, use all initial exercises\n            for (const exercise of INITIAL_EXERCISES) {\n              await storageService.saveExercise(exercise);\n            }\n            allExercises = INITIAL_EXERCISES;\n          } else {\n            // Always use the latest exercise definitions from INITIAL_EXERCISES to ensure\n            // users get updated exercise types, defaults, and any new exercises\n            // This is an AUTOMATIC refresh that preserves user favorites\n            const storedIds = new Set(storedExercises.map(ex => ex.id));\n            const newExercises = INITIAL_EXERCISES.filter(ex => !storedIds.has(ex.id));\n            \n            // Update existing exercises with latest data from INITIAL_EXERCISES while preserving favorites\n            // Note: This differs from manual refresh which resets ALL data including favorites\n            const updatedStoredExercises = storedExercises.map(storedExercise => {\n              const latestExercise = INITIAL_EXERCISES.find(ex => ex.id === storedExercise.id);\n              if (latestExercise) {\n                // Use latest exercise data but preserve user's favorite status (automatic refresh)\n                return {\n                  ...latestExercise,\n                  is_favorite: storedExercise.is_favorite\n                };\n              }\n              return storedExercise; // Keep old exercise if not found in latest data\n            });\n            \n            // Save updated exercises back to storage\n            for (const exercise of updatedStoredExercises) {\n              await storageService.saveExercise(exercise);\n            }\n            \n            // Save any new exercises to storage\n            for (const exercise of newExercises) {\n              await storageService.saveExercise(exercise);\n            }\n            \n            // Combine updated and new exercises\n            allExercises = [...updatedStoredExercises, ...newExercises];\n          }\n          setExercises(allExercises);\n\n          // Load app settings\n          const storedSettings = await storageService.getAppSettings();\n          \n          if (process.env.NODE_ENV === 'development') {\n            console.log('⚙️ Loaded stored settings:', storedSettings);\n          }\n          \n          // Merge with defaults to handle new settings properties\n          const settingsToSet = storedSettings ? {\n            ...DEFAULT_APP_SETTINGS,\n            ...storedSettings\n          } : DEFAULT_APP_SETTINGS;\n          \n          if (process.env.NODE_ENV === 'development') {\n            console.log('⚙️ Final settings to set:', settingsToSet);\n          }\n          \n          if (!storedSettings) {\n            await storageService.saveAppSettings(DEFAULT_APP_SETTINGS);\n          } else if (Object.keys(DEFAULT_APP_SETTINGS).length !== Object.keys(storedSettings).length) {\n            // Update stored settings with any new defaults\n            await storageService.saveAppSettings(settingsToSet);\n          }\n          setAppSettings(settingsToSet);\n\n          // Load and apply user preferences (locale) for cross-device sync\n          try {\n            const prefs = await storageService.getUserPreferences();\n            const preferredLocale = prefs?.locale;\n            if (preferredLocale && (i18n.resolvedLanguage || i18n.language) !== preferredLocale) {\n              await i18n.changeLanguage(preferredLocale);\n            }\n          } catch {}\n\n          // Set last selected exercise without invoking settings update callback to avoid effect churn\n          if (settingsToSet.last_selected_exercise_id) {\n            const lastExercise = allExercises.find(\n              (ex: Exercise) => ex.id === settingsToSet.last_selected_exercise_id\n            );\n            if (lastExercise) {\n              setSelectedExercise(lastExercise);\n              // Compute initial duration if rep-based\n              if (lastExercise.exercise_type === 'repetition_based') {\n                const baseRep = lastExercise.rep_duration_seconds || BASE_REP_TIME;\n                const repDuration = Math.round(baseRep * settingsToSet.rep_speed_factor) as TimerPreset;\n                setSelectedDuration(repDuration);\n              }\n            }\n          }\n      } catch (error) {\n        console.error('Failed to initialize app data:', error);\n        // Fallback to initial exercises\n        setExercises(INITIAL_EXERCISES);\n      }\n    }\n    setIsLoading(false);\n  };\n\n  initializeApp();\n}, [hasConsent]);\n\n// Cleanup sync triggers on unmount\nuseEffect(() => {\n  const cleanup = setupSyncTriggers();\n  return cleanup;\n}, []);\n\n  // Proactively nudge a sync on first mount after initialization so cross-device\n  // preferences (favorites/locale/theme) are pulled promptly.\n  useEffect(() => {\n    if (hasConsent) {\n      void syncService.sync();\n    }\n  }, [hasConsent]);\n\n  // Listen for consent changes\n  useEffect(() => {\n    const handleConsentGranted = () => {\n      setHasConsent(true);\n    };\n\n    const handleConsentRevoked = () => {\n      setHasConsent(false);\n      setExercises([]);\n      setAppSettings(DEFAULT_APP_SETTINGS);\n    };\n\n    window.addEventListener('consent-granted', handleConsentGranted);\n    window.addEventListener('consent-revoked', handleConsentRevoked);\n\n    // Preload critical routes after initial setup\n    preloadCriticalRoutes();\n\n    return () => {\n      window.removeEventListener('consent-granted', handleConsentGranted);\n      window.removeEventListener('consent-revoked', handleConsentRevoked);\n    };\n  }, []);\n\n  // Handle consent banner\n  const handleConsentGranted = () => {\n    setHasConsent(true);\n  };\n\n  \n\n  // Update exercise favorite status\n  const toggleExerciseFavorite = async (exercise_id: string) => {\n    if (!hasConsent) return;\n\n    try {\n      await storageService.toggleExerciseFavorite(exercise_id);\n  // Promptly sync so favorites show up on other devices\n  void syncService.sync();\n      setExercises(prev => \n        prev.map(exercise => \n          exercise.id === exercise_id \n            ? { ...exercise, is_favorite: !exercise.is_favorite }\n            : exercise\n        )\n      );\n    } catch (error) {\n      console.error('Failed to toggle exercise favorite:', error);\n    }\n  };\n\n  \n\n  // Refresh local state when sync applies server changes\n  useEffect(() => {\n    const handler = async () => {\n      // Refresh exercises and settings after server changes are applied\n      const [updatedExercises, updatedSettings, updatedPrefs] = await Promise.all([\n        storageService.getExercises(),\n        storageService.getAppSettings(),\n        storageService.getUserPreferences()\n      ]);\n      if (updatedExercises.length > 0) setExercises(updatedExercises);\n      if (updatedSettings) {\n        setAppSettings(prev => ({ ...prev, ...updatedSettings }));\n        // Apply theme immediately after settings change\n        if (updatedSettings.dark_mode) {\n          document.documentElement.classList.add('dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n        }\n      }\n      // Apply locale if it changed on another device\n      try {\n        const preferredLocale = updatedPrefs?.locale;\n        if (preferredLocale && (i18n.resolvedLanguage || i18n.language) !== preferredLocale) {\n          await i18n.changeLanguage(preferredLocale);\n        }\n      } catch {}\n    };\n    window.addEventListener('sync:applied', handler as EventListener);\n    return () => window.removeEventListener('sync:applied', handler as EventListener);\n  }, []);\n\n  // Early theme detection to prevent flash - use system preference as fallback\n  useEffect(() => {\n    // Check system preference for initial theme\n    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (prefersDark) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  // Apply dark mode to document\n  useEffect(() => {\n    if (appSettings.dark_mode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n\n    // Debug logging in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log('🎨 Theme applied:', appSettings.dark_mode ? 'dark' : 'light', {\n        hasConsent,\n        dark_mode: appSettings.dark_mode\n      });\n    }\n  }, [appSettings.dark_mode, hasConsent]);\n\n  // Show consent banner if no consent\n  if (!hasConsent) {\n    return <ConsentBanner onConsentGranted={handleConsentGranted} />;\n  }\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400 font-medium\">Loading RepCue...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // JSDOM can miss origin/href; BrowserRouter will throw. Provide minimal fallback.\n  const canUseBrowserRouter = typeof window !== 'undefined' && !!(window.location && (window.location as Location).href);\n\n  return (\n    canUseBrowserRouter ? (\n      <Router>\n      <ChunkErrorBoundary>\n        <MigrationSuccessBanner />\n        <AppShell>\n          <Suspense fallback={createRouteLoader('page')}>\n            <Routes>\n              <Route \n                path={AppRoutes.HOME} \n                element={\n                  <Suspense fallback={createRouteLoader('Home')}>\n                    <HomePage \n                      exercises={exercises}\n                      appSettings={appSettings}\n                      onToggleFavorite={toggleExerciseFavorite}\n                    />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.EXERCISES} \n                element={\n                  <Suspense fallback={createRouteLoader('Exercises')}>\n                    <ExercisePage \n                      exercises={exercises}\n                      onToggleFavorite={toggleExerciseFavorite}\n                    />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.WORKOUTS} \n                element={\n                  <Suspense fallback={createRouteLoader('Workouts')}>\n                    <WorkoutsPage />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.CREATE_WORKOUT} \n                element={\n                  <Suspense fallback={createRouteLoader('Create Workout')}>\n                    <CreateWorkoutPage />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.EDIT_WORKOUT} \n                element={\n                  <Suspense fallback={createRouteLoader('Edit Workout')}>\n                    <EditWorkoutPage />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.TIMER} \n                element={\n                  <Suspense fallback={createRouteLoader('Timer')}>\n                    <TimerPageWrapper \n                  exercises={exercises}\n                  appSettings={appSettings}\n                  timerState={timerState}\n                  selectedExercise={selectedExercise}\n                  selectedDuration={selectedDuration}\n                  showExerciseSelector={showExerciseSelector}\n                  wakeLockSupported={wakeLockSupported}\n                  wakeLockActive={wakeLockActive}\n                      onSetSelectedExercise={handleSetSelectedExercise}\n                      onSetSelectedDuration={setSelectedDuration}\n                      onSetShowExerciseSelector={setShowExerciseSelector}\n                      onStartTimer={startTimer}\n                      onStopTimer={stopTimer}\n                      onResetTimer={resetTimer}\n                      onStartWorkoutMode={startWorkoutMode}\n                    />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.ACTIVITY_LOG} \n                element={\n                  <Suspense fallback={createRouteLoader('Activity Log')}>\n                    <ActivityLogPage exercises={exercises} />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.SETTINGS} \n                element={\n                  <Suspense fallback={createRouteLoader('Settings')}>\n                    <SettingsPage \n                      appSettings={appSettings}\n                      onUpdateSettings={updateAppSettings}\n                    />\n                  </Suspense>\n                } \n              />\n              <Route \n                path={AppRoutes.AUTH_CALLBACK} \n                element={\n                  <Suspense fallback={createRouteLoader('Auth Callback')}>\n                    <AuthCallbackPage />\n                  </Suspense>\n                } \n              />\n              {/* Redirect any unknown routes to home */}\n              <Route path=\"*\" element={<Navigate to={AppRoutes.HOME} replace />} />\n            </Routes>\n          </Suspense>\n        </AppShell>\n      </ChunkErrorBoundary>\n    </Router>\n    ) : (\n      // Fallback minimal shell for tests missing location; avoids Router URL creation\n      <ChunkErrorBoundary>\n        <AppShell>\n          <div />\n        </AppShell>\n      </ChunkErrorBoundary>\n    )\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\App.repDurationFix.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\App.workout.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\ExercisePage-i18n-labels.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\ExercisePage.preview-error.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\duration-format-fix.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\exercise-locales-coverage.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\formatTime-unit.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\i18n-init.smoke.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\i18n-lang-dir.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\i18n-rtl-language.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\interval-beep-fix.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\localizeExercise-unit.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\phase6-plurals-interpolation.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\rep-exercise-fixes.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\selectVideoVariant-unit.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\smooth-rep-animation-unit.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\splash-generation.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\storage-indexes.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\storage-legacy-drop.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\timer-helper-function-unit.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\verify-media.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\workout-to-standalone-transition.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\__tests__\\workout-transition-fixes.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\AppShell.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":152,"column":12,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":152,"endColumn":29,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page titles/classnames are constants; actual UI strings use t()"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":152,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":152,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page titles/classnames are constants; actual UI strings use t()"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\ConsentBanner.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":62,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":62,"endColumn":164,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":63,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":63,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":64,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":64,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":69,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":69,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":69,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":69,"endColumn":62,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":70,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":70,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":71,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":71,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":74,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":74,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":82,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":82,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":83,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":83,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":96,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":96,"endColumn":166,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":97,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":97,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: consent copy pending localization; UX validated"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\InstallPrompt.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":72,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":386,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":386,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":431,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":431,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":435,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":435,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":459,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":459,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":462,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":462,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":462,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":462,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":462,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":462,"endColumn":187,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":467,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":467,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":467,"column":85,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":467,"endColumn":94,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":490,"column":15,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":490,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: install guidance text pending localization"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\LanguageSwitcher.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":72,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":72,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: language names shown in their native forms"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":73,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":73,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: language names shown in their native forms"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":75,"column":14,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":75,"endColumn":33,"suppressions":[{"kind":"directive","justification":"i18n-exempt: language names shown in their native forms"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":95,"column":12,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":95,"endColumn":35,"suppressions":[{"kind":"directive","justification":"i18n-exempt: language names shown in their native forms"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\MigrationSuccessBanner.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'handleDismiss' function makes the dependencies of useEffect Hook (at line 45) change on every render. To fix this, wrap the definition of 'handleDismiss' in its own useCallback() Hook.","line":19,"column":9,"nodeType":"VariableDeclarator","endLine":27,"endColumn":4,"suggestions":[{"desc":"Wrap the definition of 'handleDismiss' in its own useCallback() Hook.","fix":{"range":[623,791],"text":"useCallback(() => {\r\n    setIsVisible(false);\r\n    onDismiss?.();\r\n    \r\n    // Clear data after animation\r\n    setTimeout(() => {\r\n      setMigrationData(null);\r\n    }, 300);\r\n  })"}}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":104,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":104,"endColumn":48},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":52},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":115,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":115,"endColumn":95},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":116,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":116,"endColumn":48},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":116,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":116,"endColumn":84},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":130,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":130,"endColumn":60}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface MigrationSuccessDetail {\r\n  recordsClaimed: number;\r\n  tableStats: Record<string, number>;\r\n  timestamp: string;\r\n}\r\n\r\ninterface MigrationSuccessBannerProps {\r\n  onDismiss?: () => void;\r\n}\r\n\r\nconst MigrationSuccessBanner: React.FC<MigrationSuccessBannerProps> = ({ onDismiss }) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const [migrationData, setMigrationData] = useState<MigrationSuccessDetail | null>(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setIsVisible(false);\r\n    onDismiss?.();\r\n    \r\n    // Clear data after animation\r\n    setTimeout(() => {\r\n      setMigrationData(null);\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleMigrationSuccess = (event: CustomEvent<MigrationSuccessDetail>) => {\r\n      setMigrationData(event.detail);\r\n      setIsVisible(true);\r\n      \r\n      // Auto-dismiss after 8 seconds\r\n      setTimeout(() => {\r\n        handleDismiss();\r\n      }, 8000);\r\n    };\r\n\r\n    window.addEventListener('data-migration-success', handleMigrationSuccess as EventListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('data-migration-success', handleMigrationSuccess as EventListener);\r\n    };\r\n  }, [handleDismiss]);\r\n\r\n  const formatRecordTypes = (tableStats: Record<string, number>): string => {\r\n    const nonZeroTables = Object.entries(tableStats)\r\n      .filter(([, count]) => count > 0)\r\n      .sort(([, a], [, b]) => b - a) // Sort by count descending\r\n      .map(([table, count]) => {\r\n        // Map internal table names to user-friendly names\r\n        const friendlyNames: Record<string, string> = {\r\n          exercises: t('auth:migration.exercises'),\r\n          activityLogs: t('auth:migration.workouts'),\r\n          userPreferences: t('auth:migration.preferences'),\r\n          appSettings: t('auth:migration.settings'),\r\n          workouts: t('auth:migration.workoutPlans'),\r\n          workoutSessions: t('auth:migration.sessions')\r\n        };\r\n        \r\n        return `${count} ${friendlyNames[table] || table}`;\r\n      });\r\n\r\n    if (nonZeroTables.length === 0) {\r\n      return '';\r\n    } else if (nonZeroTables.length === 1) {\r\n      return nonZeroTables[0];\r\n    } else if (nonZeroTables.length === 2) {\r\n      return nonZeroTables.join(` ${t('common:and')} `);\r\n    } else if (nonZeroTables.length <= 4) {\r\n      const last = nonZeroTables.pop();\r\n      return `${nonZeroTables.join(', ')}, ${t('common:and')} ${last}`;\r\n    } else {\r\n      // For very long lists, show top 3 and summarize the rest\r\n      const shown = nonZeroTables.slice(0, 3);\r\n      const remaining = nonZeroTables.length - 3;\r\n      return `${shown.join(', ')}, ${t('common:and')} ${remaining} ${t('auth:migration.others')}`;\r\n    }\r\n  };\r\n\r\n  if (!migrationData || !isVisible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={`fixed top-4 left-4 right-4 z-50 transform transition-all duration-300 ease-out ${\r\n        isVisible ? 'translate-y-0 opacity-100' : '-translate-y-full opacity-0'\r\n      }`}\r\n      role=\"alert\"\r\n      aria-live=\"polite\"\r\n    >\r\n      <div className=\"bg-green-50 border border-green-200 rounded-lg shadow-lg p-4 mx-auto max-w-sm sm:max-w-md md:max-w-lg lg:max-w-xl\">\r\n        <div className=\"flex items-start\">\r\n          <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n            <div className=\"w-6 h-6 text-green-600\">\r\n              ✅\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"ml-3 flex-1 min-w-0\">\r\n            <h3 className=\"text-sm sm:text-base font-medium text-green-800 break-words\">\r\n              {t('auth:migration.success.title')}\r\n            </h3>\r\n            \r\n            <div className=\"mt-2 text-sm sm:text-base text-green-700 space-y-2\">\r\n              <p className=\"break-words\">\r\n                {t('auth:migration.success.message', { \r\n                  count: migrationData.recordsClaimed \r\n                })}\r\n              </p>\r\n              \r\n              {migrationData.recordsClaimed > 0 && (\r\n                <div className=\"text-xs sm:text-sm bg-green-100/50 rounded-md p-2 break-words\">\r\n                  <span className=\"font-medium\">{t('auth:migration.success.details')}:</span>{' '}\r\n                  <span>{formatRecordTypes(migrationData.tableStats)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"ml-4 flex-shrink-0 self-start\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-green-50 rounded-md p-1.5 sm:p-2 text-green-400 hover:text-green-600 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50 transition-colors\"\r\n              onClick={handleDismiss}\r\n              aria-label={t('common:dismiss')}\r\n            >\r\n              <span className=\"sr-only\">{t('common:dismiss')}</span>\r\n              <svg className=\"h-3 w-3 sm:h-4 sm:w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MigrationSuccessBanner;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\Navigation.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":80,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":80,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":81,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":81,"endColumn":100,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":87,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":87,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":111,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":111,"endColumn":182,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":118,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":118,"endColumn":154,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":119,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":119,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":121,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":121,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: aria/labels constructed from t(); remaining literals are roles/tokens"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\OfflineBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\OnboardingFlow.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":217,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":217,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":219,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":219,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":220,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":220,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":223,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":223,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":256,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":256,"endColumn":111,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":285,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":285,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":285,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":285,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: onboarding copy and hints pending full localization"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\ProfileSection.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":48,"column":14,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":48,"endColumn":29},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":48,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":48,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":52,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":52,"endColumn":35},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":54,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":54,"endColumn":98},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":59,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":59,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":62,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":62,"endColumn":147},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":66,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":66,"endColumn":44},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":67,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":67,"endColumn":88},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":71,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":71,"endColumn":81},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":79,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":79,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":81,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":81,"endColumn":28},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":83,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":83,"endColumn":216},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":85,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":85,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":85,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":85,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":85,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":85,"endColumn":93},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":44},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":67},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":86,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":155},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":88,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":88,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":88,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":88,"endColumn":55},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":92,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":92,"endColumn":28},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":95,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":95,"endColumn":265},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":97,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":97,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":97,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":97,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":97,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":97,"endColumn":93},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":44},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":67},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":86,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":177},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":44},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":59},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":105,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":105,"endColumn":35},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":107,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":107,"endColumn":82},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":108,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":108,"endColumn":73},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":111,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":111,"endColumn":68},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":112,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":112,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":112,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":112,"endColumn":84},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":118,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":118,"endColumn":26},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":120,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":120,"endColumn":214},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":122,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":122,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":122,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":122,"endColumn":49},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":122,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":122,"endColumn":91},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":123,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":123,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":123,"column":58,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":123,"endColumn":65},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":123,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":123,"endColumn":177},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":125,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":125,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { AuthModal } from './auth/AuthModal';\r\n\r\ninterface ProfileSectionProps {\r\n  onViewProfile?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const ProfileSection: React.FC<ProfileSectionProps> = ({\r\n  onViewProfile,\r\n  className = ''\r\n}) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { isAuthenticated, user, signOut, loading } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n\r\n  const handleSignOut = async () => {\r\n    await signOut();\r\n  };\r\n\r\n  const getInitials = (name?: string, email?: string) => {\r\n    if (name) {\r\n      return name\r\n        .split(' ')\r\n        .map(word => word.charAt(0))\r\n        .join('')\r\n        .toUpperCase()\r\n        .slice(0, 2);\r\n    }\r\n    if (email) {\r\n      return email.charAt(0).toUpperCase();\r\n    }\r\n    return '?';\r\n  };\r\n\r\n  const displayName = user?.displayName || user?.email?.split('@')[0] || t('profile.anonymous');\r\n  const initials = getInitials(user?.displayName, user?.email);\r\n\r\n  return (\r\n    <>\r\n      <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4 mb-4 ${className}`}>\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center gap-2\">\r\n          <svg className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n          </svg>\r\n          {t('profile.title', 'Profile')}\r\n        </h2>\r\n\r\n      {isAuthenticated && user ? (\r\n        <div className=\"space-y-3\">\r\n          {/* User Info */}\r\n          <div className=\"flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            {user.avatarUrl ? (\r\n              <img\r\n                src={user.avatarUrl}\r\n                alt={displayName}\r\n                className=\"h-10 w-10 rounded-full object-cover\"\r\n              />\r\n            ) : (\r\n              <div className=\"h-10 w-10 rounded-full bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white text-sm font-medium\">\r\n                {initials}\r\n              </div>\r\n            )}\r\n            <div className=\"flex-1 min-w-0\">\r\n              <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\r\n                {displayName}\r\n              </p>\r\n              {user.email && (\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\r\n                  {user.email}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onViewProfile}\r\n              className=\"flex-1 flex items-center justify-center gap-2 py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n              </svg>\r\n              {t('profile.viewProfile', 'View Profile')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleSignOut}\r\n              disabled={loading}\r\n              className=\"flex-1 flex items-center justify-center gap-2 py-2 px-4 bg-gray-600 hover:bg-gray-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n              </svg>\r\n              {loading ? t('common:loading') : t('signOut')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {/* Not signed in message */}\r\n          <div className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg text-center\">\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-2\">\r\n              {t('profile.notSignedIn', 'You are not signed in')}\r\n            </p>\r\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n              {t('profile.signInToSync', 'Sign in to sync your data across devices')}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Sign In Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowAuthModal(true)}\r\n            className=\"w-full flex items-center justify-center gap-2 py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 16l-4-4m0 0l4-4m0 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\" />\r\n            </svg>\r\n            {t('signIn.button')}\r\n          </button>\r\n        </div>\r\n      )}\r\n      </div>\r\n\r\n      {/* Auth Modal */}\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        initialMode=\"signin\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\SnackbarProvider.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":2,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":25,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":25,"endColumn":28,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":24,"suppressions":[{"kind":"directive","justification":"i18n-exempt: developer toasts not user-localized"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":101,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":101,"endColumn":29,"suppressions":[{"kind":"directive","justification":"i18n-exempt: developer toasts not user-localized"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\SyncStatusBanner.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":55,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":55,"endColumn":111},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":56,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":56,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":102,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":102,"endColumn":81},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":103,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":103,"endColumn":76},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":127,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":127,"endColumn":65},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":128,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":128,"endColumn":59},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":136,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":136,"endColumn":118},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":137,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":137,"endColumn":36}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { useOfflineStatus } from '../hooks/useOfflineStatus';\r\nimport { useNetworkSync } from '../hooks/useNetworkSync';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\n/**\r\n * SyncStatusBanner component shows connectivity and sync status\r\n * Extends OfflineBanner with sync capabilities\r\n */\r\nconst SyncStatusBanner: React.FC = () => {\r\n  const { isOffline, isOnline, hasBeenOffline } = useOfflineStatus();\r\n  const { state: syncState, actions: syncActions } = useNetworkSync();\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  // Helper to format time ago\r\n  const formatTimeAgo = (timestamp?: number) => {\r\n    if (!timestamp) return 'Never';\r\n    const minutes = Math.floor((Date.now() - timestamp) / 60000);\r\n    if (minutes < 1) return 'Just now';\r\n    if (minutes < 60) return `${minutes}m ago`;\r\n    const hours = Math.floor(minutes / 60);\r\n    if (hours < 24) return `${hours}h ago`;\r\n    return `${Math.floor(hours / 24)}d ago`;\r\n  };\r\n\r\n  // Show sync error state (highest priority)\r\n  if (isAuthenticated && syncState.errors.length > 0) {\r\n    return (\r\n      <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\" role=\"alert\" data-testid=\"sync-status-banner\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n              ⚠️\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm font-medium\">\r\n                Sync failed\r\n              </p>\r\n              <p className=\"text-xs mt-1\">\r\n                {syncState.errors[0]} • Last attempt: {formatTimeAgo(syncState.lastSyncAttempt)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={syncActions.clearErrors}\r\n              className=\"text-xs px-2 py-1 bg-red-200 text-red-800 rounded hover:bg-red-300 transition-colors\"\r\n              aria-label=\"Dismiss error\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            {isOnline && (\r\n              <button\r\n                onClick={syncActions.retry}\r\n                className=\"text-xs px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                aria-label=\"Retry sync\"\r\n              >\r\n                Retry\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show sync in progress (for authenticated users)\r\n  if (isAuthenticated && syncState.isSyncing) {\r\n    return (\r\n      <div className=\"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-3 mb-4\" role=\"status\" data-testid=\"sync-status-banner\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n            <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\r\n          </div>\r\n          <div className=\"ml-3\">\r\n            <p className=\"text-sm font-medium\">\r\n              Syncing data...\r\n            </p>\r\n            <p className=\"text-xs mt-1\">\r\n              Backing up your progress to the cloud\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show offline message (highest priority for non-authenticated users)\r\n  if (isOffline) {\r\n    return (\r\n      <div className=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-3 mb-4\" role=\"alert\" data-testid=\"sync-status-banner\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n            📴\r\n          </div>\r\n          <div className=\"ml-3\">\r\n            <p className=\"text-sm font-medium\">\r\n              You're offline\r\n            </p>\r\n            <p className=\"text-xs mt-1\">\r\n              {isAuthenticated \r\n                ? \"All features work normally. Data will sync when reconnected.\"\r\n                : \"All features work normally. Your data is saved locally.\"\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show reconnection message briefly (for all users)\r\n  if (isOnline && hasBeenOffline) {\r\n    return (\r\n      <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-3 mb-4\" role=\"alert\" data-testid=\"sync-status-banner\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n              🌐\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm font-medium\">\r\n                Connection restored\r\n              </p>\r\n              <p className=\"text-xs mt-1\">\r\n                {isAuthenticated \r\n                  ? \"Back online! Data will sync automatically.\"\r\n                  : \"Back online! All features available.\"\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {isAuthenticated && syncState.hasChangesToSync && (\r\n            <button\r\n              onClick={syncActions.triggerSync}\r\n              className=\"text-xs px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors ml-3\"\r\n              aria-label=\"Sync now\"\r\n            >\r\n              Sync Now\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show pending changes indicator (for authenticated users only)\r\n  if (isAuthenticated && isOnline && syncState.hasChangesToSync && !syncState.isSyncing) {\r\n    const lastSyncText = formatTimeAgo(syncState.lastSuccessfulSync);\r\n    \r\n    return (\r\n      <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-3 mb-4\" role=\"status\" data-testid=\"sync-status-banner\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\" aria-hidden=\"true\">\r\n              🔄\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm font-medium\">\r\n                Changes ready to sync\r\n              </p>\r\n              <p className=\"text-xs mt-1\">\r\n                Last synced: {lastSyncText}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={syncActions.triggerSync}\r\n            className=\"text-xs px-3 py-1 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\r\n            aria-label=\"Sync changes now\"\r\n          >\r\n            Sync\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No banner when online and no sync issues\r\n  return null;\r\n};\r\n\r\nexport default SyncStatusBanner;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\AppShell.simple.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\AppShell.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\ConsentBanner.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\InstallPrompt.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\Navigation.more-icon.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\OfflineBanner.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\OnboardingFlow.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\PreTimerCountdown.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\ProfileSection.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\__tests__\\Toast.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\AuthGuard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\AuthModal.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":110,"column":46,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":110,"endColumn":60,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\MagicLinkForm.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":58,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":58,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":61,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":61,"endColumn":36},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":64,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":64,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":69,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":69,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":71,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":71,"endColumn":265},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":73,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":73,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":91,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":91,"endColumn":33},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":94,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":94,"endColumn":36},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":99,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":99,"endColumn":119},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":66},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":107,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":107,"endColumn":32},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":126,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":126,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":126,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":126,"endColumn":66},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":137,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":137,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":145,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":145,"endColumn":42}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface MagicLinkFormProps {\r\n  onSwitchToSignIn: () => void;\r\n  onSwitchToSignUp: () => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const MagicLinkForm: React.FC<MagicLinkFormProps> = ({\r\n  onSwitchToSignIn,\r\n  onSwitchToSignUp,\r\n  onClose\r\n}) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { signInWithMagicLink, loading } = useAuth();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n\r\n    if (!email.trim()) {\r\n      setError(t('errors.emailRequired'));\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setError(t('errors.invalidEmail'));\r\n      return;\r\n    }\r\n\r\n    const result = await signInWithMagicLink(email.trim());\r\n    \r\n    if (!result.success) {\r\n      setError(result.error || t('errors.magicLinkFailed'));\r\n    } else {\r\n      setSuccess(true);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"w-full max-w-md mx-auto\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 dark:bg-green-900/20 mb-4\">\r\n              { }\r\n              <span className=\"text-2xl\">✅</span> {/* i18n-exempt: universal success symbol */}\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {t('magicLink.checkEmail')}\r\n            </h2>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n              {t('magicLink.sentTo', { email })}\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-6\">\r\n              {t('magicLink.instructions')}\r\n            </p>\r\n            \r\n            {onClose && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:bg-blue-700 dark:hover:bg-blue-600\"\r\n              >\r\n                {t('common:close')}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 dark:bg-blue-900/20 mb-4\">\r\n            { }\r\n            <span className=\"text-2xl\">✉️</span> {/* i18n-exempt: universal email symbol */}\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {t('magicLink.title')}\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\r\n            {t('magicLink.subtitle')}\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/20 border border-red-300 dark:border-red-800 rounded-md\">\r\n            <p className=\"text-red-700 dark:text-red-400 text-sm\">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              {t('fields.email')}\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n              placeholder={t('placeholders.email')}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-blue-700 dark:hover:bg-blue-600\"\r\n          >\r\n            {loading ? t('common:loading') : t('magicLink.button')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6 text-center space-y-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSwitchToSignIn}\r\n            disabled={loading}\r\n            className=\"block w-full text-sm text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {t('magicLink.switchToSignIn')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSwitchToSignUp}\r\n            disabled={loading}\r\n            className=\"block w-full text-sm text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {t('magicLink.switchToSignUp')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\SignInButton.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":52,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":52,"endColumn":61},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":52,"column":67,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":52,"endColumn":73},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":53,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":53,"endColumn":45},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":53,"column":76,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":53,"endColumn":90},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":54,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":54,"endColumn":43},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":54,"column":49,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":54,"endColumn":63},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":54,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":54,"endColumn":179},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":56,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":56,"endColumn":32},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":59,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":59,"endColumn":40}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { AuthModal } from './AuthModal';\r\n\r\ninterface SignInButtonProps {\r\n  variant?: 'primary' | 'secondary' | 'minimal';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const SignInButton: React.FC<SignInButtonProps> = ({\r\n  variant = 'primary',\r\n  size = 'md',\r\n  className = '',\r\n  children\r\n}) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { isAuthenticated, loading } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n\r\n  // Don't show if already authenticated\r\n  if (isAuthenticated) return null;\r\n\r\n  const baseClasses = 'inline-flex items-center justify-center font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors';\r\n  \r\n  const variantClasses = {\r\n    primary: 'text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-600',\r\n    secondary: 'text-blue-600 bg-blue-100 hover:bg-blue-200 dark:text-blue-400 dark:bg-blue-900/20 dark:hover:bg-blue-900/30',\r\n    minimal: 'text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 underline'\r\n  };\r\n\r\n  const sizeClasses = {\r\n    sm: 'px-3 py-2 text-sm',\r\n    md: 'px-4 py-2 text-sm',\r\n    lg: 'px-6 py-3 text-base'\r\n  };\r\n\r\n  const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setShowAuthModal(true)}\r\n        disabled={loading}\r\n        className={buttonClasses}\r\n      >\r\n        {loading ? (\r\n          <>\r\n            <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            {t('common:loading')}\r\n          </>\r\n        ) : (\r\n          children || t('signIn.button')\r\n        )}\r\n      </button>\r\n\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        initialMode=\"signin\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\SignInForm.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":103,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":103,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":106,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":106,"endColumn":33},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":111,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":111,"endColumn":119},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":112,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":112,"endColumn":66},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":118,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":118,"endColumn":32},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":120,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":120,"endColumn":28},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":123,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":123,"endColumn":387},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":125,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":125,"endColumn":45},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":127,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":127,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":127,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":127,"endColumn":68},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":128,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":128,"endColumn":38},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":128,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":128,"endColumn":62},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":132,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":132,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":134,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":134,"endColumn":29},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":137,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":137,"endColumn":272},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":138,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":138,"endColumn":54},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":138,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":138,"endColumn":93},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":141,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":141,"endColumn":75},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":142,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":142,"endColumn":33},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":142,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":142,"endColumn":101},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":146,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":146,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":147,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":147,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":148,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":148,"endColumn":68},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":149,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":149,"endColumn":88},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":151,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":151,"endColumn":70},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":152,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":152,"endColumn":100},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":153,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":153,"endColumn":48},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":153,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":153,"endColumn":77},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":165,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":165,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":165,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":165,"endColumn":113},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":166,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":166,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":169,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":169,"endColumn":29},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":170,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":170,"endColumn":27},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":173,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":173,"endColumn":264},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":174,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":174,"endColumn":52},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":183,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":183,"endColumn":35},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":215,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":215,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":215,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":215,"endColumn":63},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":226,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":226,"endColumn":36},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":238,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":238,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":240,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":240,"endColumn":100},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":240,"column":106,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":240,"endColumn":112},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":241,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":241,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":241,"column":82,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":241,"endColumn":96},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":242,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":242,"endColumn":49},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":242,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":242,"endColumn":69},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":242,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":242,"endColumn":185},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":244,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":244,"endColumn":45},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":244,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":244,"endColumn":73},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":248,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":248,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":249,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":249,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":262,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":262,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":274,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":274,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface SignInFormProps {\r\n  onSwitchToSignUp: () => void;\r\n  onSwitchToMagicLink: () => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const SignInForm: React.FC<SignInFormProps> = ({\r\n  onSwitchToSignUp,\r\n  onSwitchToMagicLink,\r\n  onClose\r\n}) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { \r\n    signInWithPassword, \r\n    signInWithOAuth, \r\n    signInWithPasskey,\r\n    isPasskeySupported,\r\n    isPlatformAuthenticatorAvailable,\r\n    loading \r\n  } = useAuth();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passkeySupported, setPasskeySupported] = useState(false);\r\n  const [platformAuthAvailable, setPlatformAuthAvailable] = useState(false);\r\n\r\n  // Check passkey availability on mount\r\n  React.useEffect(() => {\r\n    const checkPasskeySupport = async () => {\r\n      const supported = isPasskeySupported();\r\n      setPasskeySupported(supported);\r\n      \r\n      if (supported) {\r\n        const platformAvailable = await isPlatformAuthenticatorAvailable();\r\n        setPlatformAuthAvailable(platformAvailable);\r\n      }\r\n    };\r\n    \r\n    checkPasskeySupport();\r\n  }, [isPasskeySupported, isPlatformAuthenticatorAvailable]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!email.trim() || !password.trim()) {\r\n      setError(t('errors.allFieldsRequired'));\r\n      return;\r\n    }\r\n\r\n    const result = await signInWithPassword(email.trim(), password);\r\n    \r\n    if (!result.success) {\r\n      setError(result.error || t('errors.signInFailed'));\r\n    } else if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const [oauthLoading, setOauthLoading] = useState<string | null>(null);\r\n\r\n  const handleOAuthSignIn = async (provider: 'google' | 'apple' | 'github') => {\r\n    setError('');\r\n    setOauthLoading(provider);\r\n    \r\n    try {\r\n      const result = await signInWithOAuth(provider);\r\n      \r\n      if (!result.success) {\r\n        setError(result.error || t('errors.signInFailed'));\r\n        setOauthLoading(null);\r\n      }\r\n      // Note: successful OAuth redirects to provider, so no need to clear loading state\r\n    } catch (error) {\r\n      console.error('OAuth error:', error);\r\n      setError(t('errors.signInFailed'));\r\n      setOauthLoading(null);\r\n    }\r\n  };\r\n\r\n  const handlePasskeySignIn = async () => {\r\n    setError('');\r\n    const result = await signInWithPasskey(email.trim() || undefined);\r\n    \r\n    if (!result.success) {\r\n      setError(result.error || t('errors.signInFailed'));\r\n    } else if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {t('signIn.title')}\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\r\n            {t('signIn.subtitle')}\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/20 border border-red-300 dark:border-red-800 rounded-md\">\r\n            <p className=\"text-red-700 dark:text-red-400 text-sm\">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Passkey Sign In - Primary Method */}\r\n        {passkeySupported && (\r\n          <div className=\"mb-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handlePasskeySignIn}\r\n              disabled={loading}\r\n              className=\"w-full flex items-center justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n            >\r\n              <span className=\"mr-2 text-lg\">🔐</span>\r\n              {platformAuthAvailable ? \r\n                t('signInWithBiometrics', 'Sign in with biometrics') : /* i18n-exempt: fallback text provided */\r\n                t('signInWithPasskey', 'Sign in with passkey') /* i18n-exempt: fallback text provided */\r\n              }\r\n            </button>\r\n            \r\n            <div className=\"mt-4 text-center\">\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white text-sm\"\r\n                placeholder={t('fields.emailOptional', 'Email (optional for faster sign in)')} /* i18n-exempt: fallback text provided */\r\n                disabled={loading}\r\n              />\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                {t('passkeyHint', 'Use your fingerprint, face, or security key to sign in instantly')} {/* i18n-exempt: fallback text provided */}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">\r\n                    {t('orUseTraditionalMethod', 'Or use traditional method')}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Only show email field if passkeys are not supported */}\r\n          {!passkeySupported && (\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                {t('fields.email')}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                placeholder={t('placeholders.email')}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              {t('fields.password')}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                placeholder={t('placeholders.password')}\r\n                disabled={loading}\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                disabled={loading}\r\n              >\r\n                <span className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\r\n                  { }\r\n                  {showPassword ? '👁️' : '👁️‍🗨️'} {/* i18n-exempt: universal eye icons for password visibility */}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-blue-700 dark:hover:bg-blue-600\"\r\n          >\r\n            {loading ? t('common:loading') : t('signIn.button')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm\">\r\n              <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">\r\n                {t('orContinueWith')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 grid grid-cols-1 gap-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleOAuthSignIn('google')}\r\n              disabled={loading || oauthLoading !== null}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n            >\r\n              {oauthLoading === 'google' ? (\r\n                <>\r\n                  <svg className=\"animate-spin -ml-1 mr-3 h-4 w-4 text-gray-500 dark:text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  {t('redirectingToProvider', 'Redirecting to Google...')}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span className=\"mr-2\">🔍</span> {/* i18n-exempt: Google search icon */}\r\n                  {t('continueWithGoogle')}\r\n                </>\r\n              )}\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={onSwitchToMagicLink}\r\n              disabled={loading}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              { }\r\n              <span className=\"mr-2\">✉️</span> {/* i18n-exempt: universal email icon */}\r\n              {t('continueWithEmail')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSwitchToSignUp}\r\n            disabled={loading}\r\n            className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {t('signIn.switchToSignUp')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\SignUpForm.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":146,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":146,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":149,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":149,"endColumn":33},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":154,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":154,"endColumn":119},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":155,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":155,"endColumn":66},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":161,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":161,"endColumn":32},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":162,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":162,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":163,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":163,"endColumn":70},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":164,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":164,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":164,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":164,"endColumn":120},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":168,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":168,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":171,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":171,"endColumn":31},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":174,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":174,"endColumn":266},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":175,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":175,"endColumn":48},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":182,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":182,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":185,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":185,"endColumn":388},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":187,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":187,"endColumn":47},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":189,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":189,"endColumn":43},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":189,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":189,"endColumn":70},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":190,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":190,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":190,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":190,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":194,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":194,"endColumn":82},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":195,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":195,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":195,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":195,"endColumn":114},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":199,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":199,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":200,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":200,"endColumn":40},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":201,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":201,"endColumn":68},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":202,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":202,"endColumn":88},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":204,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":204,"endColumn":70},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":205,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":205,"endColumn":100},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":206,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":206,"endColumn":48},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":206,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":206,"endColumn":83},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":217,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":217,"endColumn":38},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":217,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":217,"endColumn":94},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":233,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":233,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":233,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":233,"endColumn":113},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":234,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":234,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":237,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":237,"endColumn":29},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":238,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":238,"endColumn":27},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":241,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":241,"endColumn":264},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":242,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":242,"endColumn":52},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":251,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":251,"endColumn":35},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":281,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":281,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":313,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":313,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":313,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":313,"endColumn":63},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":324,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":324,"endColumn":36},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":336,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":336,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":338,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":338,"endColumn":100},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":338,"column":106,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":338,"endColumn":112},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":82,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":96},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":49},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":69},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":185},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":342,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":342,"endColumn":45},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":342,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":342,"endColumn":73},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":346,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":346,"endColumn":41},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":347,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":347,"endColumn":42},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":360,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":360,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":372,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":372,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface SignUpFormProps {\r\n  onSwitchToSignIn: () => void;\r\n  onSwitchToMagicLink: () => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const SignUpForm: React.FC<SignUpFormProps> = ({\r\n  onSwitchToSignIn,\r\n  onSwitchToMagicLink,\r\n  onClose\r\n}) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { \r\n    signUpWithPassword, \r\n    signInWithOAuth, \r\n    registerPasskey,\r\n    isPasskeySupported,\r\n    isPlatformAuthenticatorAvailable,\r\n    loading \r\n  } = useAuth();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passkeySupported, setPasskeySupported] = useState(false);\r\n  const [platformAuthAvailable, setPlatformAuthAvailable] = useState(false);\r\n\r\n  // Check passkey availability on mount\r\n  React.useEffect(() => {\r\n    const checkPasskeySupport = async () => {\r\n      const supported = isPasskeySupported();\r\n      setPasskeySupported(supported);\r\n      \r\n      if (supported) {\r\n        const platformAvailable = await isPlatformAuthenticatorAvailable();\r\n        setPlatformAuthAvailable(platformAvailable);\r\n      }\r\n    };\r\n    \r\n    checkPasskeySupport();\r\n  }, [isPasskeySupported, isPlatformAuthenticatorAvailable]);\r\n\r\n  const validateForm = () => {\r\n    if (!email.trim() || !password.trim() || !confirmPassword.trim()) {\r\n      setError(t('errors.allFieldsRequired'));\r\n      return false;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(t('errors.passwordMismatch'));\r\n      return false;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setError(t('errors.passwordTooShort'));\r\n      return false;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setError(t('errors.invalidEmail'));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const result = await signUpWithPassword(\r\n      email.trim(), \r\n      password, \r\n      displayName.trim() || undefined\r\n    );\r\n    \r\n    if (!result.success) {\r\n      setError(result.error || t('errors.signUpFailed'));\r\n    } else if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const [oauthLoading, setOauthLoading] = useState<string | null>(null);\r\n\r\n  const handleOAuthSignIn = async (provider: 'google' | 'apple' | 'github') => {\r\n    setError('');\r\n    setOauthLoading(provider);\r\n    \r\n    try {\r\n      const result = await signInWithOAuth(provider);\r\n      \r\n      if (!result.success) {\r\n        setError(result.error || t('errors.signInFailed'));\r\n        setOauthLoading(null);\r\n      }\r\n      // Note: successful OAuth redirects to provider, so no need to clear loading state\r\n    } catch (error) {\r\n      console.error('OAuth error:', error);\r\n      setError(t('errors.signInFailed'));\r\n      setOauthLoading(null);\r\n    }\r\n  };\r\n\r\n  const handlePasskeyRegistration = async () => {\r\n    setError('');\r\n    \r\n    if (!email.trim()) {\r\n      setError(t('errors.emailRequired'));\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      setError(t('errors.invalidEmail'));\r\n      return;\r\n    }\r\n\r\n    const result = await registerPasskey(email.trim());\r\n    \r\n    if (!result.success) {\r\n      setError(result.error || t('errors.registrationFailed'));\r\n    } else if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {t('signUp.title')}\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\r\n            {t('signUp.subtitle')}\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/20 border border-red-300 dark:border-red-800 rounded-md\">\r\n            <p className=\"text-red-700 dark:text-red-400 text-sm\">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Passkey Registration - Primary Method */}\r\n        {passkeySupported && (\r\n          <div className=\"mb-6\">\r\n            <div className=\"text-center mb-4\">\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                {t('passkeyRegisterInfo', 'Create an account with just your email and biometrics - no password needed!')}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                  placeholder={t('fields.email')}\r\n                  disabled={loading}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handlePasskeyRegistration}\r\n                disabled={loading}\r\n                className=\"w-full flex items-center justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                <span className=\"mr-2 text-lg\">🔐</span>\r\n                {platformAuthAvailable ? \r\n                  t('signUpWithBiometrics', 'Sign up with biometrics') : \r\n                  t('signUpWithPasskey', 'Sign up with passkey')\r\n                }\r\n              </button>\r\n              \r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n                {t('passkeyRegisterHint', 'Your device will securely create and store a passkey for this account')}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">\r\n                    {t('orUseTraditionalSignUp', 'Or create account with password')}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              {t('fields.displayName')} <span className=\"text-gray-400\">({t('common:optional')})</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"displayName\"\r\n              value={displayName}\r\n              onChange={(e) => setDisplayName(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n              placeholder={t('placeholders.displayName')}\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n\r\n          {/* Only show email field if passkeys are not supported */}\r\n          {!passkeySupported && (\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                {t('fields.email')}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                placeholder={t('placeholders.email')}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              {t('fields.password')}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                placeholder={t('placeholders.password')}\r\n                disabled={loading}\r\n                required\r\n                minLength={6}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                disabled={loading}\r\n              >\r\n                <span className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\r\n                  { }\r\n                  {showPassword ? '👁️' : '👁️‍🗨️'} {/* i18n-exempt: universal eye icons for password visibility */}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              {t('fields.confirmPassword')}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type={showConfirmPassword ? 'text' : 'password'}\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                placeholder={t('placeholders.confirmPassword')}\r\n                disabled={loading}\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                disabled={loading}\r\n              >\r\n                <span className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\r\n                  { }\r\n                  {showConfirmPassword ? '👁️' : '👁️‍🗨️'} {/* i18n-exempt: universal eye icons for password visibility */}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-blue-700 dark:hover:bg-blue-600\"\r\n          >\r\n            {loading ? t('common:loading') : t('signUp.button')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm\">\r\n              <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">\r\n                {t('orContinueWith')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 grid grid-cols-1 gap-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleOAuthSignIn('google')}\r\n              disabled={loading || oauthLoading !== null}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n            >\r\n              {oauthLoading === 'google' ? (\r\n                <>\r\n                  <svg className=\"animate-spin -ml-1 mr-3 h-4 w-4 text-gray-500 dark:text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  {t('redirectingToProvider', 'Redirecting to Google...')}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span className=\"mr-2\">🔍</span> {/* i18n-exempt: Google search icon */}\r\n                  {t('continueWithGoogle')}\r\n                </>\r\n              )}\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={onSwitchToMagicLink}\r\n              disabled={loading}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              { }\r\n              <span className=\"mr-2\">✉️</span> {/* i18n-exempt: universal email icon */}\r\n              {t('continueWithEmail')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSwitchToSignIn}\r\n            disabled={loading}\r\n            className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {t('signUp.switchToSignIn')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\UserProfile.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":52,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":52,"endColumn":58},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":55,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":55,"endColumn":141},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":74,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":74,"endColumn":43},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":79,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":79,"endColumn":150},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":80,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":80,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":81,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":81,"endColumn":87},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":82,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":82,"endColumn":90},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":83},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":93,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":93,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":203},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":38},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":104,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":104,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":107,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":107,"endColumn":251},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":61}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface UserProfileProps {\r\n  className?: string;\r\n}\r\n\r\nexport const UserProfile: React.FC<UserProfileProps> = ({ className = '' }) => {\r\n  const { t } = useTranslation(['auth', 'common']);\r\n  const { user, signOut, loading } = useAuth();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  if (!user) return null;\r\n\r\n  const handleSignOut = async () => {\r\n    setShowDropdown(false);\r\n    await signOut();\r\n  };\r\n\r\n  const getInitials = (name?: string, email?: string) => {\r\n    if (name) {\r\n      return name\r\n        .split(' ')\r\n        .map(word => word.charAt(0))\r\n        .join('')\r\n        .toUpperCase()\r\n        .slice(0, 2);\r\n    }\r\n    if (email) {\r\n      return email.charAt(0).toUpperCase();\r\n    }\r\n    return '?';\r\n  };\r\n\r\n  const displayName = user.displayName || user.email?.split('@')[0] || t('profile.anonymous');\r\n  const initials = getInitials(user.displayName, user.email);\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setShowDropdown(!showDropdown)}\r\n        className=\"flex items-center space-x-2 text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-md p-1\"\r\n        aria-expanded={showDropdown}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        {user.avatarUrl ? (\r\n          <img\r\n            src={user.avatarUrl}\r\n            alt={displayName}\r\n            className=\"h-8 w-8 rounded-full object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"h-8 w-8 rounded-full bg-blue-600 dark:bg-blue-700 flex items-center justify-center text-white text-sm font-medium\">\r\n            {initials}\r\n          </div>\r\n        )}\r\n        <span className=\"text-sm font-medium truncate max-w-24\">{displayName}</span>\r\n        <svg\r\n          className={`h-4 w-4 transform transition-transform ${showDropdown ? 'rotate-180' : ''}`}\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {showDropdown && (\r\n        <>\r\n          {/* Backdrop to close dropdown */}\r\n          <div\r\n            className=\"fixed inset-0 z-10\"\r\n            onClick={() => setShowDropdown(false)}\r\n          />\r\n          \r\n          {/* Dropdown menu */}\r\n          <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg z-20 border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"py-1\">\r\n              <div className=\"px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\r\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\r\n                  {displayName}\r\n                </p>\r\n                {user.email && (\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\r\n                    {user.email}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowDropdown(false);\r\n                  // TODO: Open profile settings modal\r\n                }}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:bg-gray-100 dark:focus:bg-gray-700\"\r\n              >\r\n                {t('profile.settings')}\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSignOut}\r\n                disabled={loading}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:bg-gray-100 dark:focus:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? t('common:loading') : t('signOut')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\auth\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\icons\\NavigationIcons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\icons\\__tests__\\NavigationIcons.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\security\\DataExportButton.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":76,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":76,"endColumn":38},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":76,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":76,"endColumn":57},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":80,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":80,"endColumn":93},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":80,"column":99,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":80,"endColumn":106},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":99},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":105,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":113}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { supabase } from '../../config/supabase';\r\n\r\ninterface DataExportButtonProps {\r\n  className?: string;\r\n  variant?: 'primary' | 'secondary';\r\n}\r\n\r\nconst DataExportButton: React.FC<DataExportButtonProps> = ({ \r\n  className = '', \r\n  variant = 'secondary' \r\n}) => {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const { session } = useAuth();\r\n\r\n  const handleExportData = async () => {\r\n    setIsExporting(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      if (!session?.access_token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const response = await supabase.functions.invoke('export-data', {\r\n        headers: {\r\n          Authorization: `Bearer ${session.access_token}`,\r\n        },\r\n      });\r\n\r\n      if (response.error) {\r\n        throw new Error(response.error.message || 'Export failed');\r\n      }\r\n\r\n      // Create and trigger download\r\n      const blob = new Blob([JSON.stringify(response.data, null, 2)], {\r\n        type: 'application/json'\r\n      });\r\n      \r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `repcue-data-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      setSuccess(true);\r\n      setTimeout(() => setSuccess(false), 5000);\r\n\r\n    } catch (err) {\r\n      console.error('Data export failed:', err);\r\n      setError(err instanceof Error ? err.message : 'Export failed');\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const baseClasses = variant === 'primary' \r\n    ? 'bg-blue-600 hover:bg-blue-700 text-white'\r\n    : 'bg-gray-200 hover:bg-gray-300 text-gray-900';\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <button\r\n        onClick={handleExportData}\r\n        disabled={isExporting}\r\n        className={`px-4 py-2 rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${baseClasses} ${className}`}\r\n        aria-label=\"Export your data\"\r\n      >\r\n        {isExporting ? 'Exporting...' : 'Export My Data'}\r\n      </button>\r\n\r\n      {error && (\r\n        <div className=\"text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"text-sm text-green-600 bg-green-50 border border-green-200 rounded-md p-2\" role=\"status\">\r\n          Your data has been exported successfully!\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"text-xs text-gray-500\">\r\n        <p>Export includes your workouts, exercises, settings, and activity logs.</p>\r\n        <p>You can request up to 3 exports per day.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataExportButton;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\components\\security\\DeleteAccountModal.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":81,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":81,"endColumn":28},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":83,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":83,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":84,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":84,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":85,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":85,"endColumn":78},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":86,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":86,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":87,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":87,"endColumn":52},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":90,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":90,"endColumn":90},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":98,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":98,"endColumn":84},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":99,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":99,"endColumn":67},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":100,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":100,"endColumn":55},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":106,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":106,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":108,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":108,"endColumn":50},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":109,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":109,"endColumn":127},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":115,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":115,"endColumn":132},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":124,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":124,"endColumn":27},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":126,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":126,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":127,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":127,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":128,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":128,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":135,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":135,"endColumn":82},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":136,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":136,"endColumn":85},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":141,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":141,"endColumn":53},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":145,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":145,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":147,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":147,"endColumn":49},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":148,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":148,"endColumn":127},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":153,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":153,"endColumn":51},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":154,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":154,"endColumn":132},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":163,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":163,"endColumn":26},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":165,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":165,"endColumn":64},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":166,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":166,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":167,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":167,"endColumn":43},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":172,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":172,"endColumn":28},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":178,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":178,"endColumn":47},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":179,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":179,"endColumn":83},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":185,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":185,"endColumn":101},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":185,"column":107,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":185,"endColumn":114},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":190,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":190,"endColumn":46},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":193,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":193,"endColumn":68},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":194,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":194,"endColumn":175},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":196,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":196,"endColumn":54},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":196,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":196,"endColumn":76},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":201,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":201,"endColumn":180},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":207,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":207,"endColumn":63}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { supabase } from '../../config/supabase';\r\n\r\ninterface DeleteAccountModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst DeleteAccountModal: React.FC<DeleteAccountModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSuccess \r\n}) => {\r\n  const [step, setStep] = useState<'confirm' | 'reason' | 'final'>('confirm');\r\n  const [confirmation, setConfirmation] = useState('');\r\n  const [reason, setReason] = useState('');\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { session, signOut } = useAuth();\r\n\r\n  const handleClose = () => {\r\n    if (!isDeleting) {\r\n      setStep('confirm');\r\n      setConfirmation('');\r\n      setReason('');\r\n      setError(null);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    if (confirmation !== 'DELETE') {\r\n      setError('You must type \"DELETE\" to confirm');\r\n      return;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      if (!session?.access_token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const response = await supabase.functions.invoke('delete-account', {\r\n        body: {\r\n          confirmation: 'DELETE',\r\n          reason: reason.trim() || undefined\r\n        },\r\n        headers: {\r\n          Authorization: `Bearer ${session.access_token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.error) {\r\n        throw new Error(response.error.message || 'Account deletion failed');\r\n      }\r\n\r\n      // Sign out user\r\n      await signOut();\r\n      \r\n      onSuccess?.();\r\n      handleClose();\r\n\r\n    } catch (err) {\r\n      console.error('Account deletion failed:', err);\r\n      setError(err instanceof Error ? err.message : 'Account deletion failed');\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg max-w-md w-full p-6 max-h-[90vh] overflow-y-auto\">\r\n        {step === 'confirm' && (\r\n          <>\r\n            <h2 className=\"text-xl font-bold text-red-600 mb-4\">Delete Account</h2>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n                <h3 className=\"font-semibold text-red-800 mb-2\">⚠️ This action cannot be undone</h3>\r\n                <p className=\"text-red-700 text-sm\">\r\n                  Deleting your account will permanently remove all your data including:\r\n                </p>\r\n                <ul className=\"list-disc list-inside text-red-700 text-sm mt-2 space-y-1\">\r\n                  <li>All workout history and progress</li>\r\n                  <li>Custom exercises and routines</li>\r\n                  <li>Personal settings and preferences</li>\r\n                  <li>Activity logs and statistics</li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\r\n                <h3 className=\"font-semibold text-yellow-800 mb-2\">30-Day Grace Period</h3>\r\n                <p className=\"text-yellow-700 text-sm\">\r\n                  Your account will be marked for deletion with a 30-day grace period. \r\n                  You can reactivate it by logging in during this time.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={() => setStep('reason')}\r\n                  className=\"flex-1 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md font-medium transition-colors\"\r\n                >\r\n                  Continue\r\n                </button>\r\n                <button\r\n                  onClick={handleClose}\r\n                  className=\"flex-1 bg-gray-200 hover:bg-gray-300 text-gray-900 px-4 py-2 rounded-md font-medium transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {step === 'reason' && (\r\n          <>\r\n            <h2 className=\"text-xl font-bold text-red-600 mb-4\">Why are you leaving?</h2>\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-gray-700 text-sm\">\r\n                Your feedback helps us improve. This information is optional and anonymous.\r\n              </p>\r\n              \r\n              <textarea\r\n                value={reason}\r\n                onChange={(e) => setReason(e.target.value)}\r\n                placeholder=\"Tell us why you're deleting your account (optional)\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md resize-none\"\r\n                rows={4}\r\n                maxLength={500}\r\n              />\r\n              \r\n              <div className=\"text-xs text-gray-500\">\r\n                {reason.length}/500 characters\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={() => setStep('final')}\r\n                  className=\"flex-1 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md font-medium transition-colors\"\r\n                >\r\n                  Continue\r\n                </button>\r\n                <button\r\n                  onClick={() => setStep('confirm')}\r\n                  className=\"flex-1 bg-gray-200 hover:bg-gray-300 text-gray-900 px-4 py-2 rounded-md font-medium transition-colors\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {step === 'final' && (\r\n          <>\r\n            <h2 className=\"text-xl font-bold text-red-600 mb-4\">Final Confirmation</h2>\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-gray-700\">\r\n                Type <strong>DELETE</strong> to confirm you want to permanently delete your account:\r\n              </p>\r\n              \r\n              <input\r\n                type=\"text\"\r\n                value={confirmation}\r\n                onChange={(e) => {\r\n                  setConfirmation(e.target.value);\r\n                  setError(null);\r\n                }}\r\n                placeholder=\"Type DELETE here\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-md font-mono\"\r\n                autoFocus\r\n                disabled={isDeleting}\r\n              />\r\n\r\n              {error && (\r\n                <div className=\"text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={handleDeleteAccount}\r\n                  disabled={isDeleting || confirmation !== 'DELETE'}\r\n                  className=\"flex-1 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white px-4 py-2 rounded-md font-medium transition-colors disabled:cursor-not-allowed\"\r\n                >\r\n                  {isDeleting ? 'Deleting Account...' : 'Delete My Account'}\r\n                </button>\r\n                <button\r\n                  onClick={handleClose}\r\n                  disabled={isDeleting}\r\n                  className=\"flex-1 bg-gray-200 hover:bg-gray-300 text-gray-900 px-4 py-2 rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n\r\n              <p className=\"text-xs text-gray-500 text-center\">\r\n                This action will immediately sign you out and begin the deletion process.\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteAccountModal;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\config\\features.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\config\\supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\constants\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\data\\exercises.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useExerciseVideo.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useInstallPrompt.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useNetworkSync.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useOfflineStatus.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useOnboarding.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\__tests__\\useWakeLock.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useExerciseVideo.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useInstallPrompt.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useNetworkSync.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useOfflineStatus.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useOnboarding.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\hooks\\useWakeLock.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\i18n.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\ActivityLogPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":284,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":284,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":299,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":299,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":302,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":302,"endColumn":35,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":308,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":308,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":309,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":309,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":310,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":310,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":311,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":311,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":315,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":315,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":316,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":316,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":318,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":318,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":318,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":318,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":318,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":318,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":319,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":319,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":319,"column":62,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":319,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":319,"column":88,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":319,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":324,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":324,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":325,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":325,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":326,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":326,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":329,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":329,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":329,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":329,"endColumn":102,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":332,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":332,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":333,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":333,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":336,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":336,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":336,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":336,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":343,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":343,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":343,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":343,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":346,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":346,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":347,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":347,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":350,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":350,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":350,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":350,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":355,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":355,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":356,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":356,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":357,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":357,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":357,"column":89,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":357,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":358,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":358,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":378,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":378,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":386,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":386,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":387,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":387,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":398,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":398,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":399,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":399,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":400,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":400,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":400,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":400,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":400,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":400,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":401,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":401,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":401,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":401,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":401,"column":86,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":401,"endColumn":214,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":404,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":404,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":405,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":405,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":406,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":406,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":409,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":409,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":410,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":410,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":414,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":414,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":419,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":419,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":420,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":420,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":422,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":422,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":423,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":423,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":424,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":424,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":429,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":429,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":436,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":436,"endColumn":145,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":438,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":438,"endColumn":92,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":441,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":441,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":442,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":442,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":443,"column":53,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":443,"endColumn":100,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":444,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":444,"endColumn":113,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":455,"column":80,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":455,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":458,"column":108,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":458,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":458,"column":141,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":458,"endColumn":164,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":463,"column":127,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":463,"endColumn":139,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":464,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":464,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":465,"column":46,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":465,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":468,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":468,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":468,"column":82,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":468,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":468,"column":108,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":468,"endColumn":124,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":472,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":472,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":473,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":473,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":474,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":474,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":474,"column":69,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":474,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":474,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":474,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":475,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":475,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":475,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":475,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":475,"column":110,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":475,"endColumn":155,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":480,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":480,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":481,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":481,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":481,"column":69,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":481,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":481,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":481,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":482,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":482,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":482,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":482,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":482,"column":110,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":482,"endColumn":138,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":487,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":487,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":488,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":488,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":488,"column":69,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":488,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":488,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":488,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":489,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":489,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":489,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":489,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":489,"column":110,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":489,"endColumn":238,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":491,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":491,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":496,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":496,"endColumn":154,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":497,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":497,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":503,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":503,"endColumn":105,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":504,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":504,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":504,"column":114,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":504,"endColumn":141,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":505,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":505,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":507,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":507,"endColumn":142,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":508,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":508,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":509,"column":144,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":509,"endColumn":149,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":509,"column":151,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":509,"endColumn":156,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":510,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":510,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":514,"column":76,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":514,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":517,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":517,"endColumn":122,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":519,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":519,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":530,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":530,"endColumn":105,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":531,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":531,"endColumn":90,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":539,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":539,"endColumn":140,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":540,"column":46,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":540,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":541,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":541,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":542,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":542,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":544,"column":129,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":544,"endColumn":134,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":544,"column":136,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":544,"endColumn":141,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":546,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":546,"endColumn":113,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":549,"column":108,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":549,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":549,"column":142,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":549,"endColumn":168,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":549,"column":186,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":549,"endColumn":204,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":556,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":556,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":557,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":557,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":69,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":110,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":155,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":564,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":564,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":565,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":565,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":565,"column":69,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":565,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":565,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":565,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":566,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":566,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":566,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":566,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":566,"column":110,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":566,"endColumn":138,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":579,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":579,"endColumn":105,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":580,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":580,"endColumn":90,"suppressions":[{"kind":"directive","justification":"i18n-exempt: certain fallback strings localized via t(); remaining literals are icons/units"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\AuthCallbackPage.tsx","messages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":133,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":133,"endColumn":36},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":133,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":133,"endColumn":59},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":136,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":136,"endColumn":43},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":140,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":140,"endColumn":47},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":140,"column":49,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":140,"endColumn":65},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":158,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":158,"endColumn":34},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":158,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":158,"endColumn":59},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":168,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":168,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":168,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":168,"endColumn":52},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":171,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":171,"endColumn":45},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":171,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":171,"endColumn":85},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":191,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":191,"endColumn":37},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":191,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":191,"endColumn":69},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":194,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":194,"endColumn":44},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":198,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":198,"endColumn":39},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":198,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":198,"endColumn":57}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from '../config/supabase';\nimport { Routes } from '../types';\n\n/**\n * OAuth callback page that handles authentication redirects\n * This page is typically visited after OAuth sign-in (Google, Apple, etc.)\n * Enhanced with better error handling and user feedback\n */\nconst AuthCallbackPage: React.FC = () => {\n  const { t } = useTranslation('auth');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [provider, setProvider] = useState<string>('OAuth provider');\n\n  useEffect(() => {\n    const handleAuthCallback = async () => {\n      try {\n        // Extract provider from URL params for better UX\n        const providerParam = searchParams.get('provider') || 'OAuth provider';\n        setProvider(providerParam.charAt(0).toUpperCase() + providerParam.slice(1));\n\n        // Check for OAuth error in URL params (common OAuth error pattern)\n        const errorParam = searchParams.get('error');\n        const errorDescription = searchParams.get('error_description');\n        \n        if (errorParam) {\n          let friendlyMessage = errorDescription || errorParam;\n          \n          // Provide user-friendly error messages for common OAuth errors\n          switch (errorParam) {\n            case 'access_denied':\n              friendlyMessage = t('errors.oauthAccessDenied', 'Sign-in was cancelled. You can try signing in again.');\n              break;\n            case 'invalid_request':\n              friendlyMessage = t('errors.oauthInvalidRequest', 'There was a problem with the sign-in request. Please try again.');\n              break;\n            case 'server_error':\n              friendlyMessage = t('errors.oauthServerError', 'The authentication service is temporarily unavailable. Please try again later.');\n              break;\n            default:\n              friendlyMessage = t('errors.oauthGeneric', 'Sign-in failed. Please try again.');\n          }\n          \n          console.error('OAuth error from URL params:', { error: errorParam, description: errorDescription });\n          setError(friendlyMessage);\n          \n          // Redirect to home with error after a delay\n          setTimeout(() => {\n            navigate(Routes.HOME, { replace: true });\n          }, 4000);\n          return;\n        }\n\n        // Get the session from Supabase\n        const { data, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          console.error('Auth callback error:', error);\n          \n          // Map Supabase auth errors to user-friendly messages\n          let friendlyMessage = error.message;\n          \n          if (error.message.includes('email_not_confirmed')) {\n            friendlyMessage = t('errors.emailNotConfirmed', 'Please check your email and click the confirmation link to complete sign-up.');\n          } else if (error.message.includes('invalid_credentials')) {\n            friendlyMessage = t('errors.invalidCredentials', 'Invalid credentials. Please try signing in again.');\n          } else if (error.message.includes('too_many_requests')) {\n            friendlyMessage = t('errors.rateLimited', 'Too many attempts. Please wait a few minutes and try again.');\n          } else {\n            friendlyMessage = t('errors.signInFailed', 'Sign-in failed. Please try again.');\n          }\n          \n          setError(friendlyMessage);\n          \n          // Redirect to home with error after a delay\n          setTimeout(() => {\n            navigate(Routes.HOME, { replace: true });\n          }, 4000);\n          return;\n        }\n\n        if (data.session?.user) {\n          // Successfully authenticated\n          console.log('OAuth authentication successful:', {\n            provider: data.session.user.app_metadata?.provider,\n            userId: data.session.user.id,\n            email: data.session.user.email\n          });\n          \n          setSuccess(true);\n          \n          // Show success state briefly before redirecting\n          setTimeout(() => {\n            navigate(Routes.HOME, { replace: true });\n          }, 2000);\n        } else {\n          // No session found - could be a refresh issue\n          console.warn('No session found during OAuth callback');\n          setError(t('errors.noSessionFound', 'Authentication session not found. Please try signing in again.'));\n          \n          setTimeout(() => {\n            navigate(Routes.HOME, { replace: true });\n          }, 3000);\n        }\n      } catch (err) {\n        console.error('Unexpected error during auth callback:', err);\n        setError(t('errors.signInFailed', 'An unexpected error occurred. Please try again.'));\n        \n        // Redirect to home after a delay\n        setTimeout(() => {\n          navigate(Routes.HOME, { replace: true });\n        }, 4000);\n      }\n    };\n\n    handleAuthCallback();\n  }, [navigate, t, searchParams]);\n\n  if (success) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 dark:bg-green-900/20\">\n              <span className=\"text-2xl\">✅</span> {/* i18n-exempt: universal success symbol */}\n            </div>\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-white\">\n              {t('callback.success', 'Sign-in successful!')} {/* i18n-exempt: fallback text provided */}\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n              {t('callback.successMessage', `Successfully signed in with ${provider}. Redirecting to your dashboard...`)} {/* i18n-exempt: fallback text provided */}\n            </p>\n            <div className=\"mt-4\">\n              <div className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\">\n                {t('callback.redirectingShort', 'Redirecting...')} {/* i18n-exempt: fallback text provided */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900/20\">\n              <span className=\"text-2xl\">❌</span> {/* i18n-exempt: universal error symbol */}\n            </div>\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-white\">\n              {t('callback.error', 'Authentication failed')} {/* i18n-exempt: fallback text provided */}\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400 max-w-sm mx-auto\">\n              {error}\n            </p>\n            <div className=\"mt-6 space-y-3\">\n              <button\n                onClick={() => navigate(Routes.HOME, { replace: true })}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\"\n              >\n                {t('callback.tryAgain', 'Try Again')} {/* i18n-exempt: fallback text provided */}\n              </button>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {t('callback.autoRedirectIn', 'Auto-redirecting in a few seconds...')} {/* i18n-exempt: fallback text provided */}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 dark:bg-blue-900/20\">\n            <svg className=\"animate-spin h-6 w-6 text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-white\">\n            {t('callback.processing', 'Processing authentication...')} {/* i18n-exempt: fallback text provided */}\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n            {t('callback.processingMessage', `Completing sign-in with ${provider}. This should only take a moment.`)} {/* i18n-exempt: fallback text provided */}\n          </p>\n          <div className=\"mt-4\">\n            <div className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400\">\n              {t('callback.pleaseWait', 'Please wait...')} {/* i18n-exempt: fallback text provided */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthCallbackPage;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\CreateWorkoutPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":239,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":239,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":254,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":254,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":258,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":258,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":273,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":273,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":288,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":288,"endColumn":118,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":289,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":289,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":298,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":298,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":321,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":321,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":328,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":328,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":344,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":344,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":358,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":358,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":365,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":365,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":30,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":90,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":370,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":370,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":370,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":370,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":371,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":371,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":371,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":371,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":372,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":372,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":372,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":372,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":373,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":373,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":373,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":373,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":374,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":374,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":374,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":374,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":375,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":375,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":375,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":375,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":376,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":376,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":376,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":376,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":384,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":384,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":394,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":394,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":395,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":395,"endColumn":168,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":405,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":405,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":406,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":406,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":417,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":417,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":420,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":420,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":425,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":425,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":429,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":429,"endColumn":119,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":430,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":430,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":430,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":430,"endColumn":101,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":433,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":433,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":436,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":436,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":440,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":440,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":442,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":442,"endColumn":152,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":443,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":443,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":444,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":444,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":445,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":445,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":448,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":448,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":452,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":452,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":456,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":456,"endColumn":103,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":458,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":458,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":100,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":115,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":468,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":468,"endColumn":103,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":470,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":470,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":472,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":472,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":472,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":472,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":472,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":472,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":473,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":473,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":473,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":473,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":473,"column":100,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":473,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":479,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":479,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":481,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":481,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":483,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":483,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":483,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":483,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":483,"column":71,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":483,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":484,"column":49,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":484,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":484,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":484,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":484,"column":98,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":484,"endColumn":120,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":491,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":491,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":492,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":492,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":494,"column":83,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":494,"endColumn":148,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":495,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":495,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":499,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":499,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":502,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":502,"endColumn":90,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":505,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":505,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":506,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":506,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":511,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":511,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":512,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":512,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":519,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":519,"endColumn":146,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":520,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":520,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":524,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":524,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":527,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":527,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":530,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":530,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":531,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":531,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":536,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":536,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":537,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":537,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":542,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":542,"endColumn":146,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":543,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":543,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":547,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":547,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":550,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":550,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":553,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":553,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":554,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":554,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":560,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":560,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":567,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":567,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":568,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":568,"endColumn":142,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":569,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":569,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":573,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":573,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":576,"column":71,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":576,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":579,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":579,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":580,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":580,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":585,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":585,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":586,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":586,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":596,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":596,"endColumn":231,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":599,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":599,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":612,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":612,"endColumn":33,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":621,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":621,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":621,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":621,"endColumn":90,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":622,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":622,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":622,"column":82,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":622,"endColumn":96,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":623,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":623,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":623,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":623,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":623,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":623,"endColumn":185,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":625,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":625,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":628,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":628,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":636,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":636,"endColumn":106,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":637,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":637,"endColumn":107,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":638,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":638,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":639,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":639,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":640,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":640,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":641,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":641,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":645,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":645,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":647,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":647,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":647,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":647,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":647,"column":65,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":647,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":648,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":648,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":648,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":648,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":648,"column":92,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":648,"endColumn":114,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":653,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":653,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":654,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":654,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":661,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":661,"endColumn":170,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":663,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":663,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":666,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":666,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":667,"column":176,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":667,"endColumn":188,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":667,"column":193,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":667,"endColumn":219,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":667,"column":225,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":667,"endColumn":250,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":668,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":668,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":676,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":676,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":677,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":677,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":677,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":677,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":686,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":686,"endColumn":128,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":688,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":688,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":692,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":692,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":693,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":693,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation messages pending localization"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\EditWorkoutPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":256,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":256,"endColumn":104,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":266,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":266,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":269,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":269,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":276,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":276,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":291,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":291,"endColumn":104,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":301,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":301,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":311,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":311,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":317,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":317,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":332,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":332,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":347,"column":12,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":347,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":360,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":360,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":367,"column":12,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":367,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":383,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":383,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":397,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":397,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":404,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":404,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":30,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":78,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":90,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":409,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":409,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":409,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":409,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":410,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":410,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":410,"column":77,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":410,"endColumn":94,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":411,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":411,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":411,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":411,"endColumn":100,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":412,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":412,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":412,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":412,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":413,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":413,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":413,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":413,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":414,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":414,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":414,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":414,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":415,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":415,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":415,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":415,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":423,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":423,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":433,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":433,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":434,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":434,"endColumn":168,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":444,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":444,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":445,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":445,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":456,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":456,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":459,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":459,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":464,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":464,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":468,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":468,"endColumn":119,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":469,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":469,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":469,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":469,"endColumn":103,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":471,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":471,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":473,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":473,"endColumn":130,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":476,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":476,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":480,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":480,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":484,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":484,"endColumn":140,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":485,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":485,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":486,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":486,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":487,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":487,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":490,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":490,"endColumn":95,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":494,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":494,"endColumn":74,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":496,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":496,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":497,"column":76,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":497,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":499,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":499,"endColumn":126,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":500,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":500,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":502,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":502,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":502,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":502,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":502,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":502,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":503,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":503,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":503,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":503,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":503,"column":100,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":503,"endColumn":115,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":507,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":507,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":508,"column":76,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":508,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":510,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":510,"endColumn":126,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":511,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":511,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":513,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":513,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":513,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":513,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":513,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":513,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":514,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":514,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":514,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":514,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":514,"column":100,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":514,"endColumn":116,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":518,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":518,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":520,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":520,"endColumn":76,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":522,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":522,"endColumn":72,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":524,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":524,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":524,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":524,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":524,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":524,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":525,"column":51,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":525,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":525,"column":74,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":525,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":525,"column":100,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":525,"endColumn":226,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":532,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":532,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":534,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":534,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":535,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":535,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":538,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":538,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":545,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":545,"endColumn":202,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":550,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":550,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":554,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":554,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":561,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":561,"endColumn":202,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":566,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":566,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":567,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":567,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":570,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":570,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":577,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":577,"endColumn":202,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":582,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":582,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":583,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":583,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":586,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":586,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":593,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":593,"endColumn":202,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":602,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":602,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":604,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":604,"endColumn":231,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":607,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":607,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":608,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":608,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":608,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":608,"endColumn":62,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":608,"column":70,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":608,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":609,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":609,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":609,"column":66,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":609,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":609,"column":92,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":609,"endColumn":120,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":611,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":611,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":626,"column":12,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":626,"endColumn":27,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":633,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":633,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":633,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":633,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":640,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":640,"endColumn":106,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":641,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":641,"endColumn":111,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":642,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":642,"endColumn":115,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":643,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":643,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":644,"column":10,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":644,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":648,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":648,"endColumn":108,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":650,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":650,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":650,"column":49,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":650,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":650,"column":63,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":650,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":651,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":651,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":651,"column":64,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":651,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":651,"column":90,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":651,"endColumn":112,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":656,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":656,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":657,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":657,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":664,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":664,"endColumn":170,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":666,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":666,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":669,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":669,"endColumn":93,"suppressions":[{"kind":"directive","justification":"i18n-exempt: form validation/fallback strings pending localization"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\ExercisePage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":273,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":273,"endColumn":35,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":278,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":278,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":286,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":286,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":312,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":312,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":313,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":313,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":314,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":314,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":315,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":315,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":316,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":316,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":317,"column":53,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":317,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":318,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":318,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":331,"column":56,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":331,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":337,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":337,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":342,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":342,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":344,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":344,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":350,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":350,"endColumn":137,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":352,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":352,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":353,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":353,"endColumn":91,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":357,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":357,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":376,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":376,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":393,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":393,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":394,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":394,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":395,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":395,"endColumn":101,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":396,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":396,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":398,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":398,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":399,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":399,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":404,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":404,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":407,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":407,"endColumn":154,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":409,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":409,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":432,"column":82,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":432,"endColumn":101,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":432,"column":119,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":432,"endColumn":128,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":449,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":449,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":459,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":459,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":459,"column":112,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":459,"endColumn":129,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":515,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":515,"endColumn":209,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":516,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":516,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":516,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":516,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":517,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":517,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":517,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":517,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":549,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":549,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":552,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":552,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":552,"column":64,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":552,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":552,"column":90,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":552,"endColumn":135,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":554,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":554,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":558,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":558,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":64,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":559,"column":90,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":559,"endColumn":288,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":561,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":561,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":568,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":568,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":569,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":569,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":571,"column":19,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":571,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":587,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":587,"endColumn":148,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":589,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":589,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":595,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":595,"endColumn":294,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":598,"column":15,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":598,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":599,"column":15,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":599,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":603,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":603,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":616,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":616,"endColumn":33,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page already uses t() for user-visible text; remaining literals are units, icons, or fallback defaults"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\HomePage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":137,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":137,"endColumn":30,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":143,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":143,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":146,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":146,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":146,"column":58,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":146,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":148,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":148,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":148,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":148,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":148,"column":67,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":148,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":149,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":149,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":149,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":149,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":152,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":152,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":152,"column":57,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":152,"endColumn":106,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":160,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":160,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":162,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":162,"endColumn":126,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":163,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":163,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":164,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":164,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":165,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":165,"endColumn":93,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":166,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":166,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":168,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":168,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":170,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":170,"endColumn":92,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":173,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":173,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":177,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":177,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":178,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":178,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":181,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":181,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":182,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":182,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":200,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":200,"endColumn":124,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":202,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":202,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":207,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":207,"endColumn":147,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":208,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":208,"endColumn":92,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":209,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":209,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":211,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":211,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":212,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":212,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":216,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":216,"endColumn":130,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":218,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":218,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":233,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":233,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":240,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":240,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":248,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":248,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":251,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":251,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":256,"column":54,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":256,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":257,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":257,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":258,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":258,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":259,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":259,"endColumn":96,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":262,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":262,"endColumn":95,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":266,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":266,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":269,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":269,"endColumn":100,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":270,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":270,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":275,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":275,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":278,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":278,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":286,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":286,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":287,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":287,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":300,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":300,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":310,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":310,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: file already uses t(); any remaining literals are app constants or non-user-visible"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\SettingsPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":129,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":129,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":135,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":135,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":160,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":160,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":178,"column":46,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":178,"endColumn":58,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":179,"column":48,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":179,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":180,"column":47,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":180,"endColumn":60,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":187,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":187,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":212,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":212,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":219,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":219,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":222,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":222,"endColumn":72,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":222,"column":115,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":222,"endColumn":142,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":236,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":236,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":241,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":241,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":248,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":248,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":262,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":262,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":270,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":270,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":276,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":276,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":299,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":299,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":319,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":319,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":326,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":326,"endColumn":35,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":337,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":337,"endColumn":31,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":343,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":343,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":96,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":114,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":120,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":139,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":375,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":375,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":376,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":376,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":380,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":380,"endColumn":73,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":381,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":381,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":385,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":385,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":386,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":386,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":398,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":398,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":401,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":401,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":412,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":412,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":415,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":415,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":426,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":426,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":429,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":429,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":436,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":436,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":437,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":437,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":438,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":438,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":442,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":442,"endColumn":34,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":443,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":443,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":444,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":444,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":446,"column":43,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":446,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":450,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":450,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":451,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":451,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":452,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":452,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":456,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":456,"endColumn":125,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":458,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":458,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":460,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":460,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":461,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":461,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI text comes from t(); remaining literals are units/IDs/tokens"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\TimerPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":270,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":270,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":271,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":271,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":272,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":272,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":273,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":273,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":295,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":295,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":297,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":297,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":302,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":302,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":304,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":304,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":304,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":304,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":305,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":305,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":305,"column":127,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":305,"endColumn":143,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":313,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":313,"endColumn":95,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":314,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":314,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":315,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":315,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":317,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":317,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":319,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":319,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":320,"column":21,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":320,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":324,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":324,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":329,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":329,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":330,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":330,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":338,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":338,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":339,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":339,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":340,"column":89,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":340,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":343,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":343,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":344,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":344,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":346,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":346,"endColumn":35,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":351,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":351,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":352,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":352,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":355,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":355,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":360,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":360,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":361,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":361,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":367,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":367,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":368,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":368,"endColumn":107,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":369,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":369,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":374,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":374,"endColumn":196,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":386,"column":64,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":386,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":387,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":387,"endColumn":30,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":388,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":388,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":388,"column":87,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":388,"endColumn":103,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":389,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":389,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":396,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":396,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":397,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":397,"endColumn":167,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":408,"column":64,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":408,"endColumn":82,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":409,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":409,"endColumn":30,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":410,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":410,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":410,"column":87,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":410,"endColumn":106,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":411,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":411,"endColumn":112,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":412,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":412,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":413,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":413,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":416,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":416,"endColumn":77,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":425,"column":46,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":425,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":426,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":426,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":427,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":427,"endColumn":34,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":428,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":428,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":429,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":429,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":432,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":432,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":434,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":434,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":435,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":435,"endColumn":48,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":438,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":438,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":440,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":440,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":447,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":447,"endColumn":98,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":448,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":448,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":451,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":451,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":453,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":453,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":463,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":463,"endColumn":143,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":464,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":464,"endColumn":125,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":466,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":466,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":479,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":479,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":479,"column":99,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":479,"endColumn":123,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":486,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":486,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":487,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":487,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":488,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":488,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":489,"column":23,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":489,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":498,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":498,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":503,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":503,"endColumn":70,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":510,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":510,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":512,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":512,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":513,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":513,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":519,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":519,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":521,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":521,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":524,"column":89,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":524,"endColumn":104,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":525,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":525,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":533,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":533,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":535,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":535,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":536,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":536,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":542,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":542,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":544,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":544,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":549,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":549,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":551,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":551,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":552,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":552,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":554,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":554,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":567,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":567,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":569,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":569,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":570,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":570,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":576,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":576,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":578,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":578,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":583,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":583,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":585,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":585,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":586,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":586,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":588,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":588,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":599,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":599,"endColumn":93,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":602,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":602,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":603,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":603,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":610,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":610,"endColumn":104,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":613,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":613,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":621,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":621,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":623,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":623,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":624,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":624,"endColumn":61,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":628,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":628,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":630,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":630,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":636,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":636,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":638,"column":40,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":638,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":640,"column":44,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":640,"endColumn":62,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":640,"column":106,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":640,"endColumn":125,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":655,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":655,"endColumn":93,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":656,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":656,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":658,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":658,"endColumn":34,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":663,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":663,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":664,"column":29,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":664,"endColumn":41,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":666,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":666,"endColumn":49,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":666,"column":55,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":666,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":675,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":675,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":681,"column":65,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":681,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":682,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":682,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":683,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":683,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":684,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":684,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":684,"column":63,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":684,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":687,"column":50,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":687,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":688,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":688,"endColumn":36,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":689,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":689,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":694,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":694,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":697,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":697,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":699,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":699,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":711,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":711,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":714,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":714,"endColumn":57,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":717,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":717,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":718,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":718,"endColumn":42,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":724,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":724,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":727,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":727,"endColumn":55,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":729,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":729,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":734,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":734,"endColumn":51,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":736,"column":20,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":736,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":746,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":746,"endColumn":88,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":752,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":752,"endColumn":84,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":754,"column":58,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":754,"endColumn":69,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":754,"column":75,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":754,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":754,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":754,"endColumn":115,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":762,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":762,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":763,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":763,"endColumn":113,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":764,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":764,"endColumn":120,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":765,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":765,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":766,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":766,"endColumn":89,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":767,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":767,"endColumn":46,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":771,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":771,"endColumn":110,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":778,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":778,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":786,"column":31,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":786,"endColumn":122,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":788,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":788,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":790,"column":39,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":790,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":793,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":793,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":798,"column":61,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":798,"endColumn":78,"suppressions":[{"kind":"directive","justification":"i18n-exempt: page uses t() per design; remaining literals are units, icons, or technical tokens"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\WorkoutsPage.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":136,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":136,"endColumn":97,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":141,"column":42,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":141,"endColumn":105,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":142,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":142,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":143,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":143,"endColumn":85,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":144,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":144,"endColumn":80,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":157,"column":84,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":157,"endColumn":100,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":167,"column":22,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":167,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":170,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":170,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":177,"column":24,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":177,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":193,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":193,"endColumn":32,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":199,"column":16,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":199,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":204,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":204,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":205,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":205,"endColumn":127,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":206,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":206,"endColumn":53,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":206,"column":59,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":206,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":206,"column":73,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":206,"endColumn":87,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":207,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":207,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":207,"column":60,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":207,"endColumn":67,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":207,"column":86,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":207,"endColumn":114,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":210,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":210,"endColumn":83,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":211,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":211,"endColumn":39,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":213,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":213,"endColumn":65,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":214,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":214,"endColumn":38,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":218,"column":25,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":218,"endColumn":118,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":220,"column":18,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":220,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":224,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":224,"endColumn":37,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":228,"column":27,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":228,"endColumn":123,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":230,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":230,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":231,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":231,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":232,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":232,"endColumn":66,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":233,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":233,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":237,"column":41,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":237,"endColumn":142,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":238,"column":30,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":238,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":244,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":244,"endColumn":96,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":250,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":250,"endColumn":68,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":254,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":254,"endColumn":185,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":255,"column":52,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":255,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":255,"column":81,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":255,"endColumn":105,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":257,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":257,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":257,"column":65,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":257,"endColumn":71,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":257,"column":79,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":257,"endColumn":93,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":258,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":258,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":258,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":258,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":258,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":258,"endColumn":179,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":260,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":260,"endColumn":40,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":264,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":264,"endColumn":144,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":265,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":265,"endColumn":54,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":267,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":267,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":267,"column":53,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":267,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":267,"column":67,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":267,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":268,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":268,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":268,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":268,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":268,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":268,"endColumn":214,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":273,"column":33,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":273,"endColumn":140,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":274,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":274,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":276,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":276,"endColumn":47,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":276,"column":53,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":276,"endColumn":59,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":276,"column":67,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":276,"endColumn":81,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":277,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":277,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":277,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":277,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":277,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":277,"endColumn":220,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":283,"column":32,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":283,"endColumn":108,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":284,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":284,"endColumn":63,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":285,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":285,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":286,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":286,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":286,"column":58,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":286,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":286,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":286,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":287,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":287,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":287,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":287,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":287,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":287,"endColumn":243,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":289,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":289,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":289,"column":91,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":289,"endColumn":99,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":291,"column":37,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":291,"endColumn":56,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":292,"column":38,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":292,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":292,"column":58,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":292,"endColumn":64,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":292,"column":72,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":292,"endColumn":86,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":293,"column":45,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":293,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":293,"column":68,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":293,"endColumn":75,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":293,"column":94,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":293,"endColumn":139,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":298,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":298,"endColumn":44,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":305,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":305,"endColumn":126,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":306,"column":34,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":306,"endColumn":79,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":307,"column":26,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":307,"endColumn":50,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":309,"column":36,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":309,"endColumn":52,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":312,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":312,"endColumn":133,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":314,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":314,"endColumn":45,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":318,"column":35,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":318,"endColumn":197,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]},{"ruleId":"no-restricted-syntax","severity":1,"message":"Avoid hardcoded strings in JSX; use i18n t() keys instead (add // i18n-exempt with rationale if needed).","line":320,"column":28,"nodeType":"Literal","messageId":"restrictedSyntax","endLine":320,"endColumn":43,"suppressions":[{"kind":"directive","justification":"i18n-exempt: UI strings use t(); remaining literals are icons/units"}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\ActivityLogPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\CreateWorkoutPage-exercise-type.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\CreateWorkoutPage.seed.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\CreateWorkoutPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\ExercisePage.preview.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\ExercisePage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\HomePage.test.new.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\HomePage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\SettingsPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.countdown.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.exerciseDisplay.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.rep-edge-cases.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.repflow.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.standalone.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.videoPrefetch.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\TimerPage.workout.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\pages\\__tests__\\WorkoutsPage.startWorkout.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\router\\LazyRoutes.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":41,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":41,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2189,2192],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2189,2192],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":47,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":47,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2454,2457],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2454,2457],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":56,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":56,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2849,2852],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2849,2852],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\router\\__tests__\\LazyRoutes.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\router\\routeUtils.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\activityLog.workout-name.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\audioService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\consentService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\queueService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\storageService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\storageService.workout.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\__tests__\\syncService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\audioService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\authService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\consentService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\queueService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\securityService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\storageService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\syncHelpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\syncService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\services\\webauthnService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\telemetry\\videoTelemetry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\test\\setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\test\\testUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\types\\__tests__\\models.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\types\\consent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\types\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\types\\media.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\__tests__\\import-test.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\__tests__\\loadExerciseMedia.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\__tests__\\platformDetection.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\__tests__\\test-import.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\__tests__\\workoutDuration.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\i18nFormatting.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\loadExerciseMedia.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\localizeExercise.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\platformDetection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\selectVideoVariant.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\serviceWorker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\utils\\workoutDuration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\tailwind.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\tests\\e2e\\cross-device.sync.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\tests\\e2e\\dual-context-sync.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\vitest.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\akram\\OneDrive\\Documents\\Workspace\\repcue\\apps\\frontend\\vitest.stable.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]